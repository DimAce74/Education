!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.CockpitPlugins=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";b.exports=a("angular")},{angular:"angular"}],2:[function(a,b,c){"use strict";b.exports=a("camunda-bpm-sdk-js/vendor/angular")},{"camunda-bpm-sdk-js/vendor/angular":1}],3:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-add-dialog.html -->\n<div class="modal-header">\n  <h3>Add Variable to {{ isProcessInstance ? \'Process\' : \'Case\' }} Instance</h3>\n</div>\n\n<div class="modal-body add-variable-dialog">\n  <div notifications-panel></div>\n\n  <form class="form-horizontal"\n        name="addVariableForm"\n        novalidate\n        ng-submit="save()"\n        ng-hide="status === \'SUCCESS\' || status === \'FAIL\'"\n        request-aware>\n    <fieldset>\n\n      <div class="form-group variable-name">\n        <label class="control-label col-xs-4"\n               for="variableName">Variable Name*</label>\n        <div class="col-xs-8">\n          <input id="variableNameId"\n                 name="variableName"\n                 class="form-control"\n                 type="text"\n                 ng-model="newVariable.name"\n                 autofocus\n                 required />\n        </div>\n      </div>\n\n      <div class="form-group variable-type">\n        <label class="control-label col-xs-4"\n               for="variableType">Variable Type*</label>\n        <div class="col-xs-8">\n          <select id="variableTypeId"\n                  name="variableType"\n                  class="form-control"\n                  ng-options="variableType for variableType in variableTypes"\n                  ng-model="newVariable.type"\n                  ng-change="changeVariableType(variableType)">\n          </select>\n        </div>\n      </div>\n\n      <div class="form-group variable-value">\n        <label class="control-label col-xs-4"\n               for="variableValue">Variable Value*</label>\n        <div class="col-xs-8">\n          <div variable="newVariable"></div>\n\n          <p class="invalid"\n             ng-show="this.addVariableForm.editDateValue.$error.date">\n            Supported pattern \'yyyy-MM-ddTHH:mm:ss\'.\n          </p>\n\n          <p class="invalid"\n             ng-show="this.addVariableForm.editIntegerValue.$error.numeric || this.addVariableForm.editFloatValue.$error.numeric">\n            Only a {{ newVariable.type }} value is allowed.\n          </p>\n        </div>\n      </div>\n\n    </fieldset>\n  </form>\n\n  <div ng-show="status === \'SUCCESS\'">\n    The variable "{{ newVariable.name }}" has been added to the {{ isProcessInstance ? \'process\' : \'case\' }} instance successfully.\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    The variable "{{ newVariable.name }}" could not be added to the {{ isProcessInstance ? \'process\' : \'case\' }} instance.\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close()"\n          ng-disabled="status === \'PERFORM_SAVE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">Close</button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="save()"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid()">Add</button>\n\n  <button class="btn btn-primary"\n          ng-click="close()"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">OK</button>\n</div>\n<!-- / CE - camunda-bpm-webapp/ui/cockpit/client/scripts/components/variables/variable-add-dialog.html -->\n',e=["$http","$modalInstance","$scope","Notifications","Uri","instance","isProcessInstance",function(a,b,d,e,f,g,h){d.isProcessInstance=h,d.variableTypes=["String","Boolean","Short","Integer","Long","Double","Date","Null","Object"];var i=d.newVariable={name:null,type:"String",value:null},j="PERFORM_SAVE",k="SUCCESS",l="FAIL";d.$on("$routeChangeStart",function(){b.close(d.status)}),d.close=function(){b.close(d.status)};var m=d.isValid=function(){var a=c.element('[name="addVariableForm"]').scope();return!(!a||!a.addVariableForm)&&a.addVariableForm.$valid};d.save=function(){if(m()){d.status=j;var b=c.extend({},i),n=b.name;delete b.name,a.put(f.appUri("engine://engine/:engine/"+(h?"process":"case")+"-instance/"+g.id+"/variables/"+n),b).success(function(){d.status=k,e.addMessage({status:"Finished",message:"Added the variable",exclusive:!0})}).error(function(a){d.status=l,e.addError({status:"Finished",message:"Could not add the new variable: "+a.message,exclusive:!0})})}}}];b.exports={template:d,controller:e}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],4:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-inspect-modal.html -->\n<div class="modal-header">\n  <h3>Inspect "{{ variable.name }}" variable</h3>\n</div>\n\n\n<div class="modal-body variable-inspect">\n\n  <div notifications-panel></div>\n\n  <div ng-show="status === \'beforeChange\' || status === \'confirmChange\'">\n\n    <div class="form-group">\n      <label>Object Type Name:</label>\n      <code class="form-control-static"\n            cam-widget-clipboard="variable.valueInfo.objectTypeName">{{ variable.valueInfo.objectTypeName }}</code>\n    </div>\n\n    <div class="form-group">\n      <label>Serialization Data Format:</label>\n      <code class="form-control-static"\n            cam-widget-clipboard="variable.valueInfo.serializationDataFormat">{{ variable.valueInfo.serializationDataFormat }}</code>\n    </div>\n\n    <div class="form-group">\n\n      <ul class="nav nav-tabs">\n        <li ng-class="{ active: selectedTab === \'serialized\' }">\n          <a href ng-click="selectTab(\'serialized\')">Serialized</a>\n        </li>\n        <li ng-class="{ active: selectedTab === \'deserialized\' }">\n          <a href ng-click="selectTab(\'deserialized\')">Deserialized</a>\n        </li>\n      </ul>\n\n      <textarea ng-if="selectedTab === \'serialized\'"\n                name="currentValue"\n                ng-readonly="readonly"\n                ng-model="currentValue"\n                ng-keyup="typeIn(this, \'serialized\')"\n                rows="10"\n                class="form-control">\n      </textarea>\n\n      <div ng-if="selectedTab === \'deserialized\'">\n        <div class="alert alert-danger"\n             ng-show="deserializationError">\n          <strong>Deserialization Error</strong>:\n          {{deserializationError}}\n        </div>\n\n        <div ng-show="!deserializationError">\n          <textarea name="currentDeserializedValue"\n                    ng-readonly="readonly"\n                    ng-model="currentDeserializedValue"\n                    ng-keyup="typeIn(this, \'deserialized\')"\n                    rows="10"\n                    class="form-control">\n          </textarea>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n\n  <div class="alert alert-warning"\n       ng-show="status === \'confirmChange\'">\n    <span class="glyphicon glyphicon-alert"></span>\n    <strong>Warning:</strong>\n    Are you sure you want to change the value of this Object? Changing the variable in an incompatible way may lead to severe runtime problems.\n  </div>\n\n</div>\n\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="$dismiss()"\n          ng-hide="status === \'changeSuccess\'">\n    Close\n  </button>\n\n  <![if gt IE 9]>\n    <button class="btn btn-primary"\n            ng-click="$close()"\n            ng-show="!readlonly && status === \'changeSuccess\'">\n      OK\n    </button>\n\n    <button class="btn btn-primary"\n            ng-click="change()"\n            ng-disabled="status !== \'beforeChange\' || !hasChanged()"\n            ng-hide="readonly || status !== \'beforeChange\'">\n      Change\n    </button>\n\n    <button class="btn btn-warning"\n            ng-click="change()"\n            ng-hide="readonly || status !== \'confirmChange\'">\n      Confirm Change\n    </button>\n  <![endif]>\n</div>\n<!-- / CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-inspect-modal.html -->\n',e=["$http","$modalInstance","$scope","Notifications","Uri","basePath","history","readonly","variable",function(a,b,d,e,f,g,h,i,j){function k(a){return"serialized"===a}function l(b,c){var e={type:b.type,value:c,valueInfo:b.valueInfo};a({method:"PUT",url:f.appUri(g),data:e}).success(function(){d.status=s,p(b)}).error(function(){d.status=q,o(b)})}function m(a,b){function c(b){d.$apply(function(){204===b.status?(d.status=s,p(a)):(d.status=q,o(a))})}var e=new FormData;e.append("data",new Blob([b],{type:"application/json"})),e.append("type",a.valueInfo.objectTypeName);var h=new XMLHttpRequest;h.addEventListener("load",function(){c(h)},!1),h.open("POST",f.appUri(g+"/data")),h.send(e)}function n(){a({method:"GET",url:f.appUri("engine://engine/:engine/"+(h?"history/":"")+"variable-instance/"+j.id)}).success(function(a){a.errorMessage?d.deserializationError=a.errorMessage:(t=JSON.stringify(a.value),d.currentDeserializedValue=c.copy(t))}).error(function(a){d.deserializationError=a.message})}function o(a){e.addError({status:"Variable",message:"The variable '"+a.name+"' could not be changed successfully.",exclusive:!0})}function p(a){e.addMessage({status:"Variable",message:"The variable '"+a.name+"' has been changed successfully."})}var q="beforeChange",r="confirmChange",s="changeSuccess";d.selectedTab="serialized",d.status=q,d.variable=j,d.readonly=i,d.currentValue=c.copy(j.value);var t;d.$on("$routeChangeStart",function(){b.dismiss()}),d.selectTab=function(a){d.selectedTab=a,d.currentValue=c.copy(j.value),d.currentDeserializedValue=c.copy(t),d.status=q},d.typeIn=function(a,b){k(b)?d.currentValue=a.currentValue:d.currentDeserializedValue=a.currentDeserializedValue,d.status=u(b)?r:q};var u=d.hasChanged=function(a){return k(a)?j.value!==d.currentValue:t!=d.currentDeserializedValue};d.change=function(){var a=!k(d.selectedTab),b=a?d.currentDeserializedValue:d.currentValue;if("application/json"===j.valueInfo.serializationDataFormat||a)try{JSON.parse(b)}catch(c){return d.status=q,void e.addError({status:"Variable",message:"Could not parse JSON input: "+c,exclusive:!0})}a?m(j,b):l(j,b)},n()}];b.exports={template:d,controller:e}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],5:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-upload-modal.html -->\n<div class="modal-header">\n  <h3>Upload binary variable</h3>\n</div>\n\n<!--[if lt IE 10]>\n\nThis feature is unsupported in your Browser.\n\n<![endif]-->\n\n<![if gt IE 9]>\n\n<div class="modal-body variable-upload">\n\n  <div notifications-panel></div>\n\n  <div ng-show="status === \'beforeUpload\'">\n\n    <p>Select a file containing the binary content for  the variable:</p>\n\n    <p>\n      <input name="data"\n             type="file"\n             size="50"\n             maxlength="100000"\n             accept="*/*"\n             onchange="angular.element(this).scope().setFile(this)" />\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'performUpload\'">\n    Upload progress: {{progress}}%\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="$dismiss()"\n          ng-hide="status === \'uploadSuccess\' || status === \'uploadFailed\'">\n    Close\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="$close()"\n          ng-show="status === \'uploadSuccess\' || status === \'uploadFailed\'">\n    OK\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="upload()"\n          ng-disabled="status !== \'beforeUpload\'"\n          ng-hide="status === \'uploadSuccess\' || status === \'uploadFailed\'">\n    Upload\n  </button>\n</div>\n\n<![endif]>\n\n<!-- / CE - camunda-bpm-webapp/ui/cockpit/scripts/components/variables/variable-upload-modal.html -->\n',e=["$modalInstance","$scope","Notifications","Uri","basePath","variable",function(a,b,c,d,e,f){var g="beforeUpload",h="performUpload",i="uploadSuccess",j="uploadFailed";b.status=g,b.variable=f;var k;b.$on("$routeChangeStart",function(){a.dismiss()}),b.upload=function(){function a(a){b.$apply(function(){b.status=h,a.lengthComputable&&(b.progress=Math.round(100*a.loaded/a.total))})}function g(a){b.$apply(function(){204===a.status?(b.status=i,c.addMessage({status:"File",message:"The file has been uploaded successfully."})):(b.status=j,c.addError({status:"File",message:"The file could not be uploaded successfully.",exclusive:!0}))})}function l(){b.$apply(function(){b.status=j,c.addError({status:"File",message:"The file could not be uploaded successfully.",exclusive:!0})})}var m=new FormData;m.append("data",k),m.append("valueType",f.type);var n=new XMLHttpRequest;n.upload.addEventListener("progress",a,!1),n.addEventListener("load",function(){g(n)},!1),n.addEventListener("error",l,!1),n.addEventListener("abort",l,!1),n.open("POST",d.appUri(e+"/data")),n.send(m)},b.setFile=function(a){k=a.files[0]}}];b.exports={template:d,controller:e}},{}],6:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d=["$scope","processData","ProcessDefinitionResource",function(a,b,d){b.provide("processDefinitions",function(){return d.queryStatistics({incidents:!0}).$promise}),b.provide("processDefinitionStatistics",["processDefinitions",function(a){return e(a)}]);var e=function(a){var b=[],d=[];return c.forEach(a,function(e){var f=b[e.definition.key];f||(b[e.definition.key]=[]);var g=b[e.definition.key][e.definition.tenantId];if(g){var h=g.instances,i=a.failedJobs,j=c.copy(g.incidents);e.definition.version>g.definition.version&&(c.copy(e,g),g.definition.name||(g.definition.name=g.definition.key)),g.instances=h+e.instances,g.failedJobs=i+e.failedJobs,c.forEach(j,function(a){for(var b=a.incidentType,c=a.incidentCount,d=!0,e=0;e<g.incidents.length;e++){var f=g.incidents[e];f.incidentType==b&&(f.incidentCount=c+f.incidentCount,d=!1)}d&&g.incidents.push(a)})}else g=c.copy(e),g.definition.name||(g.definition.name=g.definition.key),b[g.definition.key][e.definition.tenantId]=g,d.push(g)}),d}}],e=function(a){a.registerData("cockpit.dashboard.data",{id:"process-definition-statistics-data",controller:d})};e.$inject=["DataProvider"],b.exports=e}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],7:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./dashboard/processDefinitionStatisticsData"),f=a("./processDefinition/activityInstanceStatisticsData"),g=d.module("cockpit.plugin.base.data",[]);g.config(e),g.config(f),b.exports=g}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./dashboard/processDefinitionStatisticsData":6,"./processDefinition/activityInstanceStatisticsData":8}],8:[function(a,b,c){"use strict";var d=["$scope","processData","ProcessDefinitionResource",function(a,b,c){b.provide("activityInstanceStatistics",["processDefinition",function(a){return c.queryActivityStatistics({id:a.id,incidents:!0}).$promise}])}],e=function(a){a.registerData("cockpit.processDefinition.data",{id:"activity-instance-statistics-data",controller:d})};e.$inject=["DataProvider"],b.exports=e},{}],9:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./views/main"),f=a("./resources/main"),g=a("./data/main");b.exports=d.module("cockpit.plugin.base",[e.name,f.name,g.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./data/main":7,"./resources/main":10,"./views/main":19}],10:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./processDefinition"),f=a("./processInstance"),g=d.module("cockpit.plugin.base.resources",[]);g.factory("PluginProcessDefinitionResource",e),g.factory("PluginProcessInstanceResource",f),b.exports=g}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./processDefinition":11,"./processInstance":12}],11:[function(a,b,c){"use strict";b.exports=["$resource","Uri",function(a,b){return a(b.appUri("plugin://base/:engine/process-definition/:id/:action"),{id:"@id"},{getCalledProcessDefinitions:{method:"POST",isArray:!0,params:{action:"called-process-definitions"}}})}]},{}],12:[function(a,b,c){"use strict";b.exports=["$resource","Uri",function(a,b){return a(b.appUri("plugin://base/:engine/process-instance/:id/:action"),{id:"@id"},{query:{method:"POST",isArray:!0},"delete":{url:b.appUri("engine://engine/:engine/process-instance/:id"),method:"DELETE"},count:{method:"POST",isArray:!1,params:{id:"count"}},processInstances:{method:"POST",isArray:!0,params:{action:"called-process-instances"}},getCalledProcessInstances:{method:"POST",isArray:!0,params:{action:"called-process-instances"}}})}]},{}],13:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"batch",label:"Batches",pagePath:"#/batch",template:"<!-- nothing to show, but needed -->",controller:function(){},checkActive:function(a){var b="#/batch",c=(a||"").split("?");return c.length&&c[0].slice(0-b.length)===b},priority:-5})}]},{}],14:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"decisions",label:"Decisions",pagePath:"#/decisions",checkActive:function(a){return a.indexOf("#/decision")>-1},template:"<!-- nothing to show, but needed -->",controller:function(){},priority:30})}]},{}],15:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"deployments",label:"Deployments",pagePath:"#/repository",template:"<!-- nothing to show, but needed -->",controller:function(){},priority:-5})}]},{}],16:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"proceses",label:"Processes",pagePath:"#/processes",checkActive:function(a){return a.indexOf("#/process")>-1||a.indexOf("#/migration")>-1},template:"<!-- nothing to show, but needed -->",controller:function(){},priority:100})}]},{}],17:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"reports",label:"Reports",pagePath:"#/reports",template:"<!-- nothing to show, but needed -->",controller:function(){},access:["Views",function(a){return function(b){var c=a.getProviders({component:"cockpit.report"});b(null,!!c.length)}}],priority:-4})}]},{}],18:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.navigation",{id:"tasks",label:"Human Tasks",template:"<!-- nothing to show, but needed -->",pagePath:"#/tasks",checkActive:function(a){return a.indexOf("#/tasks")>-1},controller:function(){},priority:20})}]},{}],19:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./dashboard/deployments"),f=a("./dashboard/reports"),g=a("./dashboard/batches"),h=a("./dashboard/processes"),i=a("./dashboard/decisions"),j=a("./dashboard/tasks"),k=a("./processesDashboard/process-definitions"),l=a("./processDefinition/processInstanceTable"),m=a("./processDefinition/calledProcessDefinitionTable"),n=a("./processDefinition/updateSuspensionStateAction"),o=a("./processDefinition/updateSuspensionStateDialog"),p=a("./processDefinition/activityInstanceStatisticsOverlay"),q=a("./processInstance/variableInstancesTab"),r=a("./processInstance/incidentsTab"),s=a("./processInstance/calledProcessInstanceTable"),t=a("./processInstance/userTasksTable"),u=a("./processInstance/jobRetryBulkAction"),v=a("./processInstance/jobRetryBulkDialog"),w=a("./processInstance/jobRetryDialog"),x=a("./processInstance/externalTaskRetryDialog"),y=a("./processInstance/cancelProcessInstanceAction"),z=a("./processInstance/cancelProcessInstanceDialog"),A=a("./processInstance/addVariableAction"),B=a("./processInstance/updateSuspensionStateAction"),C=a("./processInstance/updateSuspensionStateDialog"),D=a("./processInstance/activityInstanceStatisticsOverlay"),E=a("./processInstance/incidentJobRetryAction"),F=a("./processInstance/incident-externalTask-retry-action"),G=d.module("cockpit.plugin.base.views",[]);G.config(e),G.config(f),G.config(g),G.config(h),G.config(i),G.config(j),G.config(k),G.config(l),G.config(m),G.config(n),G.controller("UpdateProcessDefinitionSuspensionStateController",o),G.config(p),q(G),G.config(r),s(G),t(G),u(G),G.controller("JobRetriesController",v),G.controller("JobRetryController",w),G.controller("ExternalTaskRetryController",x),y(G),G.controller("CancelProcessInstanceController",z),G.config(A),G.config(B),G.controller("UpdateProcessInstanceSuspensionStateController",C),G.config(D),G.config(E),G.config(F),b.exports=G}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./dashboard/batches":13,"./dashboard/decisions":14,"./dashboard/deployments":15,"./dashboard/processes":16,"./dashboard/reports":17,"./dashboard/tasks":18,"./processDefinition/activityInstanceStatisticsOverlay":20,"./processDefinition/calledProcessDefinitionTable":21,"./processDefinition/processInstanceTable":22,"./processDefinition/updateSuspensionStateAction":23,"./processDefinition/updateSuspensionStateDialog":24,"./processInstance/activityInstanceStatisticsOverlay":25,"./processInstance/addVariableAction":26,"./processInstance/calledProcessInstanceTable":27,"./processInstance/cancelProcessInstanceAction":28,"./processInstance/cancelProcessInstanceDialog":29,"./processInstance/externalTaskRetryDialog":30,"./processInstance/incident-externalTask-retry-action":31,"./processInstance/incidentJobRetryAction":32,"./processInstance/incidentsTab":33,"./processInstance/jobRetryBulkAction":34,"./processInstance/jobRetryBulkDialog":35,"./processInstance/jobRetryDialog":36,"./processInstance/updateSuspensionStateAction":37,"./processInstance/updateSuspensionStateDialog":38,"./processInstance/userTasksTable":39,"./processInstance/variableInstancesTab":40,"./processesDashboard/process-definitions":41}],20:[function(a,b,c){(function(a){"use strict";var c='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/activity-instance-statistics-overlay.html -->\n<span class="activity-bottom-left-position"\n      ng-show="activityInstance || activityInstanceMI"\n      ng-click="selectRunningInstances($event)">\n  <span class="badge"\n        tooltip="Running Activity Instances"\n        tooltip-placement="top"\n        tooltip-animation="false"\n        ng-show="activityInstance.instances || activityInstanceMI.instances">\n    {{ ((activityInstance.instances || 0) + (activityInstanceMI.instances || 0) | abbreviateNumber) }}\n  </span>\n\n  <span class="badge badge-important"\n        tooltip="Open Incidents"\n        tooltip-placement="top"\n        tooltip-animation="false"\n        ng-show="activityInstance.incidents.length > 0 || activityInstanceMI.incidents.length > 0">!</span>\n</span>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/activity-instance-statistics-overlay.html -->\n',d="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processDefinition.diagram.overlay",{id:"activity-instance-statistics-overlay",template:c,controller:["$scope","Loaders",function(a,b){var c=a.bpmnElement,e=a.processData.newChild(a),f=b.startLoading();e.provide("activityInstance",["activityInstanceStatistics",function(a){for(var b=0;b<a.length;b++){var d=a[b];if(d.id===c.id)return d}return null}]),e.provide("activityInstanceMI",["activityInstanceStatistics",function(a){for(var b=0;b<a.length;b++){var d=a[b];if(d.id===c.id+"#multiInstanceBody")return d}return null}]),a.activityInstance=e.observe("activityInstance",function(b){b&&(c.isSelectable=!0),f(),a.activityInstance=b}),a.activityInstanceMI=e.observe("activityInstanceMI",function(b){b&&(c.isSelectable=!0),f(),a.activityInstanceMI=b});var g=e.observe("filter",function(a){g=a});a.selectRunningInstances=function(a){var b=d.copy(g),f=a.ctrlKey,h=c.id,i=d.copy(b.activityIds)||[],j=i.indexOf(h),k=j!==-1;h?f?k?i.splice(j,1):i.push(h):i=[h]:i=null,b.activityIds=i,e.set("filter",b)}}],priority:20})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],21:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("../../../../../../common/scripts/util/search-widget-utils"),f='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/called-process-definition-table.html -->\n<div cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-empty="No called process definitions">\n  <table class="called-process-definition cam-table">\n    <thead>\n      <tr>\n        <th class="process-definition">Called Process Definition</th>\n        <th class="activity">Activity</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr ng-repeat="calledProcessDefinition in calledProcessDefinitions">\n        <td class="process-definition"\n            cam-widget-clipboard="calledProcessDefinition.id">\n          <a ng-href="#/process-definition/{{ calledProcessDefinition.id }}/runtime?parentProcessDefinitionId={{ processDefinition.id }}">\n            {{ calledProcessDefinition.name }}\n          </a>\n        </td>\n\n        <td class="activity">\n          <span ng-show="calledProcessDefinition.calledFromActivities.length === 1"\n                cam-widget-clipboard="calledProcessDefinition.calledFromActivities[0].id">\n            <a ng-href="#/process-definition/{{ processDefinition.id }}/runtime?{{ getSearchQueryForSearchType(calledProcessDefinition.calledFromActivities[0].id) }}&amp;detailsTab=call-process-definitions-table">\n              {{ calledProcessDefinition.calledFromActivities[0].name }}\n            </a>\n          </span>\n\n          <ul ng-show="calledProcessDefinition.calledFromActivities.length > 1">\n            <li ng-repeat="activity in calledProcessDefinition.calledFromActivities"\n                cam-widget-clipboard="activity.id">\n              <a ng-href="#/process-definition/{{ processDefinition.id }}/runtime?{{ getSearchQueryForSearchType(activity.id) }}&amp;detailsTab=call-process-definitions-table">\n                {{ activity.name }}\n              </a>\n            </li>\n          <ul>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/called-process-definition-table.html -->\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processDefinition.runtime.tab",{id:"call-process-definitions-table",label:"Called Process Definitions",template:f,controller:["$scope","$location","$q","PluginProcessDefinitionResource",function(a,b,c,f){function g(a,b){var c=[];return d.forEach(a,function(a){var e=a.calledFromActivityIds,f=[];d.forEach(e,function(a){var c=b[a],d={id:a,name:c&&c.name||a};f.push(d)}),c.push(d.extend({},a,{calledFromActivities:f}))}),c}var h,i=a.processData.newChild(a);a.getSearchQueryForSearchType=e.getSearchQueryForSearchType.bind(null,"activityIdIn"),i.provide("calledProcessDefinitions",["processDefinition","filter",function(b,c){return h=d.copy(c),delete h.page,delete h.scrollToBpmnElement,h.superProcessDefinitionId=h.parentProcessDefinitionId,h.parentProcessDefinitionId=a.processDefinition.id,h.activityIdIn=h.activityIds,delete h.activityIds,a.loadingState="LOADING",f.getCalledProcessDefinitions({id:b.id},h).$promise}]),i.observe(["calledProcessDefinitions","bpmnElements"],function(b,c){a.calledProcessDefinitions=g(b,c),a.loadingState=a.calledProcessDefinitions.length?"LOADED":"EMPTY"})}],priority:5})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/search-widget-utils":75}],22:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("../../../../../../common/scripts/util/search-widget-utils"),f=a("../../../../../../common/scripts/util/pagination-utils"),g='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/process-instance-table.html -->\n<div cam-widget-search\n     cam-widget-search-valid-searches="searchConfig.searches"\n     cam-widget-search-translations="searchConfig.tooltips"\n     cam-widget-search-types="searchConfig.types"\n     cam-widget-search-operators="searchConfig.operators"\n     cam-widget-search-mode="filter">\n</div>\n\n<div cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-empty="No process instances matched by current filter.">\n  <table class="process-instances cam-table">\n    <thead>\n      <tr>\n        <th class="state">State</th>\n        <th class="instance-id">ID</th>\n        <th class="start-time">Start Time</th>\n        <th class="business-key">Business Key</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="processInstance in processInstances">\n        <td class="state">\n          <a state-circle\n             incidents="processInstance.incidents"\n             ng-href="{{ getProcessInstanceUrl(processInstance, { detailsTab: \'incidents-tab\' }) }}"></a>\n          <span class="badge badge-warning badge-suspended"\n                ng-show="processInstance.suspended"\n                tooltip="Currently suspended"\n                tooltip-placement="left">\n            <span class="glyphicon glyphicon-pause white"></span>\n          </span>\n        </td>\n\n        <td class="instance-id"\n            cam-widget-clipboard="processInstance.id">\n          <a ng-href="{{ getProcessInstanceUrl(processInstance) }}"\n             title="{{ processInstance.id }}">\n            {{ processInstance.id }}\n          </a>\n        </td>\n\n        <td class="start-time"\n            cam-widget-clipboard="processInstance.startTime">\n          {{ processInstance.startTime | camDate }}\n        </td>\n\n        <td class="business-key"\n            ng-if="processInstance.businessKey"\n            cam-widget-clipboard="processInstance.businessKey">\n          {{ processInstance.businessKey }}\n        </td>\n        <td class="business-key"\n            ng-if="!processInstance.businessKey"></td>\n      </tr>\n    </tbody>\n  </table>\n\n  <pagination ng-if="pages.total > pages.size"\n              class="pagination-sm"\n\n              page="pages.current"\n              ng-model="pages.current"\n\n              total-items="pages.total"\n              items-per-page="pages.size"\n\n              max-size="7"\n              boundary-links="true"></pagination>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/process-instance-table.html -->\n',h=JSON.parse('{\n  "types": [\n    {\n      "id": {\n        "key": "businessKey",\n        "value": "Business Key"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "activityIdIn",\n        "value": "Activity ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "startedDate",\n        "value": "Start Date"\n      },\n      "operators": [\n        {\n          "key": "Before",\n          "value": "before"\n        },\n        {\n          "key": "After",\n          "value": "after"\n        }\n      ],\n      "allowDates": true,\n      "enforceDates": true\n    },\n    {\n      "id": {\n        "key": "variables",\n        "value": "Variable"\n      },\n      "extended": true,\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        },\n        {\n          "key": "neq",\n          "value": "!="\n        },\n        {\n          "key": "gt",\n          "value": ">"\n        },\n        {\n          "key": "gteq",\n          "value": ">="\n        },\n        {\n          "key": "lt",\n          "value": "<"\n        },\n        {\n          "key": "lteq",\n          "value": "<="\n        },\n        {\n          "key": "like",\n          "value": "like"\n        }\n      ]\n    }\n  ],\n  "operators": {\n    "undefined":  [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "like"\n      }\n    ],\n    "string":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "like"\n      }\n    ],\n    "number":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      }\n    ],\n    "boolean":    [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      }\n    ],\n    "object":     [{\n      "key": "eq",\n      "value": "="\n    },\n      {\n        "key": "neq",\n        "value": "!="\n      }],\n    "date":     [{\n      "key": "lteq",\n      "value": "before"\n    },\n      {\n        "key": "gteq",\n        "value": "after"\n      }]\n  },\n  "tooltips": {\n    "inputPlaceholder": "Add criteria",\n    "invalid": "This search query is not valid",\n    "deleteSearch": "Remove search",\n    "type": "Type",\n    "name": "Property",\n    "operator": "Operator",\n    "value": "Value"\n  }\n}\n');
b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processDefinition.runtime.tab",{id:"process-instances-table",label:"Process Instances",template:g,controller:["$scope","$location","search","routeUtil","PluginProcessInstanceResource",function(a,b,c,g,i){function j(b){var c=l.current,f=l.size,g=(c-1)*f,h={processDefinitionId:k.id},j={firstResult:g,maxResults:f,sortBy:"startTime",sortOrder:"desc"},m=e.createSearchQueryForSearchWidget(b,["activityIdIn"]),n=d.extend({},m,j,h);a.processInstances=null,a.loadingState="LOADING",i.query(j,n).$promise.then(function(b){a.processInstances=b,a.loadingState=b.length?"LOADED":"EMPTY"});var o=d.extend({},m,h);i.count(o).$promise.then(function(a){l.total=a.count})}var k=a.processDefinition,l=f.initializePaginationInController(a,c,function(b,c){d.equals(b,c)||j(a.searchConfig.searches)});a.searchConfig=d.copy(h),a.$watch("searchConfig.searches",function(b,c){d.equals(b,c)||j(a.searchConfig.searches)},!0),a.getProcessInstanceUrl=function(a,c){var e="#/process-instance/"+a.id,f=d.extend({},b.search()||{},c||{}),h=["viewbox"];for(var i in c)h.push(i);return g.redirectTo(e,f,h)}}],priority:10})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/pagination-utils":74,"../../../../../../common/scripts/util/search-widget-utils":75}],23:[function(a,b,c){(function(a){"use strict";var c='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-action.html -->\n<a class="btn btn-default btn-toolbar btn-suspend-action"\n   href\n   ng-click="openDialog()"\n   tooltip="Suspend Process Definition"\n   tooltip-placement="left"\n   ng-show="!processDefinition.suspended">\n  <span class="glyphicon glyphicon-pause"></span>\n</a>\n\n<a class="btn btn-default btn-toolbar"\n   href\n   ng-click="openDialog()"\n   tooltip="Activate Process Definition"\n   tooltip-placement="left"\n   ng-hide="!processDefinition.suspended">\n  <span class="glyphicon glyphicon-play"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-action.html -->\n',d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-dialog.html -->\n<div class="modal-header">\n  <h3>{{ (processDefinition.suspended ? \'Activate\' : \'Suspend\') }} Process Definition</h3>\n</div>\n\n<div class="process-definition update-suspension-state modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n\n    <p ng-show="processDefinition.suspended">\n      <!-- activation -->\n      This process definition will be activated, so that it will be possible to start new process instances based on this process definition.\n    </p>\n\n    <p ng-hide="processDefinition.suspended">\n      <!-- suspension -->\n      This process definition will be suspended, so that it will not be possible to start new process instances based on this process definition.\n    </p>\n\n    <form class="form-horizontal"\n          name="updateSuspensionStateForm"\n          novalidate\n          request-aware\n          ng-submit="updateSuspensionState()">\n      <fieldset>\n        <div class="form-group">\n          <label class="control-label col-xs-4"\n                 for="includeInstancesValue">Include Instances\n            <!-- activation -->\n            <span tooltip="Including the process instances means that all existing process instances of this process definition will be activated too, if the value is set to true."\n                  tooltip-placement="right"\n                  ng-show="processDefinition.suspended">\n              <span class="glyphicon glyphicon-question-sign"></span>\n            </span>\n\n            <!-- suspension -->\n            <span tooltip="Including the process instances means that all existing process instances of this process definition will be suspended too, if the value is set to true."\n                  tooltip-placement="right"\n                  ng-hide="processDefinition.suspended">\n              <span class="glyphicon glyphicon-question-sign"></span>\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <label class="checkbox">\n              <input id="includeInstancesValueId"\n                     name="includeInstancesValue"\n                     type="checkbox"\n                     ng-model="data.includeInstances">\n            </label>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <label class="control-label col-xs-4" for="executeImmediately">Execute\n            <span tooltip="Decide whether the activation of this process definition should be executed immediately or delayed. If the activation should happen delayed then an execution date must be provided on which the activation will be scheduled."\n                  tooltip-placement="right"\n                  ng-show="processDefinition.suspended">\n              <span class="glyphicon glyphicon-question-sign"></span>\n            </span>\n            <span tooltip="Decide whether the suspension of this process definition should be executed immediately or delayed. If the suspension should happen delayed then an execution date must be provided on which the suspension will be scheduled."\n                  tooltip-placement="right"\n                  ng-hide="processDefinition.suspended">\n              <span class="glyphicon glyphicon-question-sign"></span>\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <label class="radio">\n              <input ng-model="data.executeImmediately"\n                     ng-value="true"\n                     type="radio"\n                     name="execute">\n              Immediately\n            </label>\n\n            <label class="radio">\n              <input ng-model="data.executeImmediately"\n                     ng-value="false"\n                     type="radio"\n                     name="execute">\n              Delayed\n            </label>\n          </div>\n\n          <label class="control-label col-xs-4"\n                 for="executionDateValue"\n                 ng-show="!data.executeImmediately">\n            Schedule at\n          </label>\n\n          <div class="col-xs-8"\n               ng-show="!data.executeImmediately">\n            <input date\n                   name="executionDateValue"\n                   ng-model="data.executionDate"\n                   type="text"\n                   required />\n\n            <p class="invalid"\n               ng-show="this.updateSuspensionStateForm.executionDateValue.$error.date">\n              Supported pattern \'yyyy-MM-ddTHH:mm:ss\'.\n            </p>\n          </div>\n\n        </div><!-- /.form-group -->\n\n      </fieldset>\n    </form>\n\n    <p>\n      Do you really want to {{ (processDefinition.suspended ? \'activate\' : \'suspend\') }} this process definition?\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'SUCCESS\'">\n    <p ng-show="processDefinition.suspended && data.executeImmediately">\n      The suspension state of the process definition has been updated to "active" successfully.\n    </p>\n    <p ng-show="processDefinition.suspended && !data.executeImmediately">\n      The activation of the process definition has been scheduled to {{ data.executionDate | camDate  }} successfully.\n    </p>\n    <p ng-show="!processDefinition.suspended && data.executeImmediately">\n      The suspension state of the process definition has been updated to "suspended" successfully.\n    </p>\n    <p ng-show="!processDefinition.suspended && !data.executeImmediately">\n      The suspension of the process definition has been scheduled to {{ data.executionDate | camDate  }} successfully.\n    </p>\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    <p ng-show="processDefinition.suspended && data.executeImmediately">\n      The suspension state of the process definition could not be updated to "active" successfully.\n    </p>\n    <p ng-show="processDefinition.suspended && !data.executeImmediately">\n      The activation of the process definition could not be scheduled to {{ data.executionDate | camDate  }} successfully.\n    </p>\n    <p ng-show="!processDefinition.suspended && data.executeImmediately">\n      The suspension state of the process definition could not be updated to "suspended" successfully.\n    </p>\n    <p ng-show="!processDefinition.suspended && !data.executeImmediately">\n      The suspension of the process definition could not be scheduled to {{ data.executionDate | camDate  }} successfully.\n    </p>\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORM_UDPATE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n    Close\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="updateSuspensionState()"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    {{ (processDefinition.suspended ? \'Activate\' : \'Suspend\') }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">\n    OK\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processDefinition/update-suspension-state-dialog.html -->\n',e="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processDefinition.runtime.action",{id:"update-suspension-state-action",label:"Update Suspension State",template:c,controller:["$scope","$rootScope","$modal",function(a,b,c){a.openDialog=function(){var f=c.open({resolve:{processData:function(){return a.processData},processDefinition:function(){return a.processDefinition}},controller:"UpdateProcessDefinitionSuspensionStateController",template:d});f.result.then(function(c){"SUCCESS"===c.status&&(c.executeImmediately&&(a.processDefinition.suspended=c.suspended,b.$broadcast("$processDefinition.suspensionState.changed",a.processDefinition)),a.processData.set("filter",e.extend({},a.filter)))})}}],priority:50})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],24:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$http","$filter","Uri","Notifications","$modalInstance","processDefinition",function(a,b,d,e,f,g,h){var i="BEFORE_UPDATE",j="PERFORM_UDPATE",k="SUCCESS",l="FAIL",m=d("date"),n="yyyy-MM-dd'T'HH:mm:ss";a.processDefinition=h,a.status=i,a.data={includeInstances:!0,executeImmediately:!0,executionDate:m(Date.now(),n)},a.$on("$routeChangeStart",function(){g.close(a.status)}),a.updateSuspensionState=function(){a.status=j;var c={};c.suspended=!h.suspended,c.includeProcessInstances=a.data.includeInstances,c.executionDate=a.data.executeImmediately?null:a.data.executionDate,b.put(e.appUri("engine://engine/:engine/process-definition/"+h.id+"/suspended/"),c).success(function(){a.status=k,a.data.executeImmediately?f.addMessage({status:"Finished",message:"Updated the suspension state of the process definition.",exclusive:!0}):f.addMessage({status:"Finished",message:"The update of the suspension state of the process definition has been scheduled.",exclusive:!0})}).error(function(b){a.status=l,a.data.executeImmediately?f.addError({status:"Finished",message:"Could not update the suspension state of the process definition: "+b.message,exclusive:!0}):f.addMessage({status:"Finished",message:"The update of the suspension state of the process definition could not be scheduled: "+b.message,exclusive:!0})})},a.isValid=function(){var a=c.element('[name="updateSuspensionStateForm"]').scope();return!(!a||!a.updateSuspensionStateForm)&&a.updateSuspensionStateForm.$valid},a.close=function(b){var c={};c.status=b,c.suspended=!h.suspended,c.executeImmediately=a.data.executeImmediately,c.executionDate=a.data.executionDate,g.close(c)}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],25:[function(a,b,c){(function(a){"use strict";var c='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/activity-instance-statistics-overlay.html -->\n<span class="activity-bottom-left-position"\n      ng-show="activityInstanceStatistics"\n      ng-click="selectRunningInstances($event)">\n  <span class="badge"\n        tooltip="Running Activity Instances"\n        tooltip-placement="top"\n        tooltip-animation="false"\n        ng-show="activityInstanceStatistics.instances   && activityInstanceStatistics.instances.length ||\n                 activityInstanceStatistics.instancesMI && activityInstanceStatistics.instancesMI.length">\n    {{ getInstanceCount() }}\n  </span>\n\n  <span class="badge badge-important"\n        tooltip="Open Incidents"\n        tooltip-placement="top"\n        tooltip-animation="false"\n        ng-show="activityInstanceStatistics.incidents   && activityInstanceStatistics.incidents.length ||\n                 activityInstanceStatistics.incidentsMI && activityInstanceStatistics.incidentsMI.length">!</span>\n</span>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/activity-instance-statistics-overlay.html -->\n',d="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,e=function(a){a.registerDefaultView("cockpit.processInstance.diagram.overlay",{id:"activity-instance-statistics-overlay",template:c,controller:["$scope","Loaders",function(a,b){var c,e=a.bpmnElement,f=a.processData.newChild(a),g=b.startLoading();a.activityInstanceStatistics=f.observe(["activityIdToInstancesMap","activityIdToIncidentsMap"],function(b,f){var h=e.id,i=d.copy(b[h]||[]),j=d.copy(f[h]||[]);g(),c=b[h+"#multiInstanceBody"];var k=b[h+"#multiInstanceBody"]||[],l=f[h+"#multiInstanceBody"]||[];(i.length||j.length||k.length||l.length)&&(e.isSelectable=!0),a.activityInstanceStatistics={instances:i,incidents:j,instancesMI:k,incidentsMI:l}});var h=f.observe("filter",function(a){h=a});a.getInstanceCount=function(){var b=0;return a.activityInstanceStatistics.instances&&(b+=a.activityInstanceStatistics.instances.length||0),a.activityInstanceStatistics.instancesMI&&(b+=a.activityInstanceStatistics.instancesMI.filter(function(a){return a.isTransitionInstance}).length||0),b},a.selectRunningInstances=function(a){var b=d.copy(h),g=a.ctrlKey,i=e.id,j=d.copy(b.activityIds)||[],k=j.indexOf(i),l=k!==-1;i?g?l?(j.splice(k,1),c&&j.splice(j.indexOf(i+"#multiInstanceBody"),1)):(j.push(i),c&&j.push(i+"#multiInstanceBody")):(j=[i],c&&j.push(i+"#multiInstanceBody")):j=null,b.activityIds=j,f.set("filter",b)}}],priority:20})};e.$inject=["ViewsProvider"],b.exports=e}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],26:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/add-variable-action.html -->\n<a class="btn btn-default btn-toolbar"\n   href\n   ng-click="openDialog()"\n   tooltip="Add a new variable to Process Instance"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-plus"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/add-variable-action.html -->\n',f=a("../../../../../client/scripts/components/variables/variable-add-dialog"),g=function(a){a.registerDefaultView("cockpit.processInstance.runtime.action",{id:"add-variable-action",label:"Add Variable Action",template:e,controller:["$scope","$modal","$rootScope",function(a,b,c){a.openDialog=function(){var e=b.open({scope:a,resolve:{instance:function(){return a.processInstance},isProcessInstance:function(){return!0}},controller:f.controller,template:f.template});e.result.then(function(b){"SUCCESS"===b&&(a.processData.set("filter",d.extend({},a.filter)),c.$broadcast("addVariableNotification"))})}}],priority:10})};g.$inject=["ViewsProvider"],b.exports=g}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../client/scripts/components/variables/variable-add-dialog":3}],27:[function(a,b,c){(function(c){"use strict";var d=a("../../../../../../common/scripts/util/search-widget-utils"),e="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,f='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/called-process-instance-table.html -->\n<div cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-empty="No called process instances">\n  <table class="called-process-instance cam-table">\n    <thead>\n      <tr>\n        <th class="called-process-instance">Called Process Instance</th>\n        <th class="process-definition">Process Definition</th>\n        <th class="activity">Activity</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr ng-repeat="calledProcessInstance in calledProcessInstances">\n        <td class="called-process-instance"\n            cam-widget-clipboard="calledProcessInstance.id">\n          <a href="#/process-instance/{{ calledProcessInstance.id }}/runtime">\n            {{ calledProcessInstance.id }}\n          </a>\n        </td>\n\n        <td class="process-definition"\n            cam-widget-clipboard="calledProcessInstance.processDefinitionId">\n          <a href="#/process-definition/{{ calledProcessInstance.processDefinitionId }}/runtime?parentProcessDefinitionId={{ processInstance.definitionId }}">\n            {{ calledProcessInstance.processDefinitionName }}\n          </a>\n        </td>\n\n        <td class="activity">\n          <span ng-if="!!calledProcessInstance.instance"\n                cam-widget-clipboard="calledProcessInstance.instance.id">\n            <a ng-href="#/process-instance/{{ processInstance.id }}/runtime?detailsTab=called-process-instances-tab&{{ getSearchQueryForSearchType(calledProcessInstance.instance.id) }}">\n              {{ calledProcessInstance.instance.name }}\n            </a>\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/called-process-instance-table.html -->\n';b.exports=function(a){a.controller("CalledProcessInstanceController",["$scope","PluginProcessInstanceResource",function(a,b){function c(c,d){g=e.copy(c),delete g.page,delete g.activityIds,delete g.scrollToBpmnElement,g.activityInstanceIdIn=g.activityInstanceIds,delete g.activityInstanceIds,a.calledProcessInstances=null,a.loadingState="LOADING",b.processInstances({id:a.processInstance.id},g).$promise.then(function(b){e.forEach(b,function(a){var b=d[a.callActivityInstanceId];a.instance=b}),a.loadingState=b.length?"LOADED":"EMPTY",a.calledProcessInstances=b})}var f=a.processData.newChild(a),g=null;a.getSearchQueryForSearchType=d.getSearchQueryForSearchType.bind(null,"activityInstanceIdIn"),f.observe(["filter","instanceIdToInstanceMap"],function(a,b){c(a,b)})}]);var b=function(a){a.registerDefaultView("cockpit.processInstance.runtime.tab",{id:"called-process-instances-tab",label:"Called Process Instances",template:f,controller:"CalledProcessInstanceController",priority:10})};b.$inject=["ViewsProvider"],a.config(b)}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/search-widget-utils":75}],28:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-dialog.html -->\n<div class="modal-header">\n  <h3>Cancel Process Instance</h3>\n</div>\n\n<div class="cancel-process-instance modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'cancellationSuccess\' || status === \'cancellationFailed\' || status === \'beforeCancellation\' || status === \'loadingFailed\'">\n    <span class="glyphicon glyphicon-loading"></span>\n    loading process instance information...\n  </div>\n\n  <p ng-show="status === \'loadingFailed\'">\n    It was not possible to get further process instance informations to be able to cancel this process instance. Refresh the current page by pressing F5 and try once again to cancel this process instance.\n  </p>\n\n  <div ng-show="status === \'beforeCancellation\'">\n    <div ng-show="subProcessInstances.length > 0">\n      <p>\n        If you cancel this process instance the following sub process instances will also be canceled:\n      </p>\n\n      <table class="table cam-table">\n        <thead>\n          <tr>\n            <th class="instance-id uuid">ID</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr ng-repeat="subProcessInstance in subProcessInstances">\n            <td class="instance-id uuid">\n              <a target="_blank"\n                 ng-href="#/process-instance/{{ subProcessInstance.id }}">\n                {{ subProcessInstance.id }}\n              </a>\n            </td>\n          </tr>\n\n          <tr>\n            <td ng-hide="subProcessInstances.length === subProcessInstancesCount">\n              and {{ subProcessInstancesCount - subProcessInstances.length }} other process instances.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <p>Do you really want to cancel this process instance?</p>\n  </div>\n\n  <div ng-show="status === \'cancellationSuccess\'">\n    <p>The process instance was canceled successfully.</p>\n    <p>After closing this dialog you will be redirected to the corresponding process definition overview.</p>\n  </div>\n\n  <div ng-show="status === \'cancellationFailed\'">\n    <p>The process instance could not be canceled successfully.</p>\n    <p>Maybe the process instance has already been cancelled or finished. Try to press F5 to refresh the page.</p>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="close(status)"\n          ng-disabled="status === \'performCancellation\'"\n          ng-hide="status === \'cancellationSuccess\' || status === \'cancellationFailed\' || status === \'loadingFailed\'">\n    Close\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'cancellationSuccess\' || status === \'cancellationFailed\' || status === \'loadingFailed\'">\n    OK\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="cancelProcessInstance()"\n          ng-disabled="status !== \'beforeCancellation\'"\n          ng-hide="status === \'cancellationSuccess\' || status === \'cancellationFailed\' || status === \'loadingFailed\'">\n    Cancel Process Instance\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-dialog.html -->\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-action.html -->\n<a class="btn btn-default btn-toolbar"\n   href\n   ng-click="openDialog()"\n   tooltip="Cancel running process instance"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-remove"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/cancel-process-instance-action.html -->\n';b.exports=function(a){a.controller("CancelProcessInstanceActionController",["$scope","$http","search","Uri","$modal",function(a,b,c,e,f){a.openDialog=function(){f.open({resolve:{processData:function(){return a.processData},processInstance:function(){return a.processInstance}},controller:"CancelProcessInstanceController",template:d})}}]);var b=function(a){a.registerDefaultView("cockpit.processInstance.runtime.action",{id:"cancel-process-instance-action",label:"Cancel Process Instance Action",template:e,controller:"CancelProcessInstanceActionController",priority:20})};b.$inject=["ViewsProvider"],a.config(b)}},{}],29:[function(a,b,c){"use strict";b.exports=["$scope","$location","Notifications","ProcessInstanceResource","$modalInstance","processInstance","processData","Views",function(a,b,c,d,e,f,g,h){var i="beforeCancellation",j="performCancellation",k="cancellationSuccess",l="cancellationFailed";a.processInstance=f;var m=g.newChild(a);a.$on("$routeChangeStart",function(){e.close(a.status)}),m.provide("subProcessInstances",function(){return d.query({firstResult:0,maxResults:5},{superProcessInstance:f.id}).$promise}),m.provide("subProcessInstancesCount",function(){return d.count({superProcessInstance:f.id}).$promise}),m.observe(["subProcessInstancesCount","subProcessInstances"],function(b,c){a.subProcessInstancesCount=b.count,a.subProcessInstances=c,a.status=i}),a.cancelProcessInstance=function(){a.status=j,a.processInstance.$delete(function(){a.status=k,c.addMessage({status:"Canceled",message:"The cancellation of the process instance was successful."})},function(b){a.status=l,c.addError({status:"Failed",message:"The cancellation of the process instance failed. "+b.data.message,exclusive:["type"]})})},a.close=function(a){if(e.close(a),a===k){var c,d,g=h.getProvider({id:"history",component:"cockpit.processInstance.view"});g?(d=b.search(),c="/process-instance/"+f.id+"/history"):c="/process-definition/"+f.definitionId,b.path(c),b.search(d||{}),b.replace()}}}]},{}],30:[function(a,b,c){"use strict";b.exports=["$scope","$location","Notifications","camAPI","$modalInstance","incident",function(a,b,c,d,e,f){var g="finished",h="performing",i="failed",j=d.resource("external-task");a.$on("$routeChangeStart",function(){e.close(a.status)}),a.incrementRetry=function(){a.status=h,j.retries({id:f.configuration,retries:1},function(){a.status=g,c.addMessage({status:"Finished",message:"Incrementing the number of retries finished successfully.",exclusive:!0})},function(b){a.status=i,c.addError({status:"Finished",message:"Incrementing the number of retries was not successful: "+b.data.message,exclusive:!0})})},a.close=function(a){e.close(a)}}]},{}],31:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-external-task-retry-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openExternalTaskRetryDialog(incident)"\n   ng-show="incident.incidentType === \'failedExternalTask\' && incident.configuration"\n   tooltip="Increment Number of Retries of Failed External Tasks"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-repeat"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-external-task-retry-action.html -->',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\n<div class="modal-header">\n  <h3>Increment Number of Retries</h3>\n</div>\n\n<div class="job-retry modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'finished\' || status === \'failed\'">\n    <p>The number of retries of the corresponding failed job of the selected incident will be incremented.</p>\n    <p>Are you sure to increment the number of retries?</p>\n  </div>\n\n  <div ng-show="status === \'finished\'">\n    The number of retries of the corresponding failed job of the selected incident has been incremented successfully.\n  </div>\n\n  <div ng-show="status === \'failed\'">\n    The number of retries of the corresponding failed job of the selected incident could not be incremented successfully.\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="close(status)"\n          ng-disabled="status === \'performing\'"\n          ng-hide="status === \'finished\' || status === \'failed\'">\n    Close\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="incrementRetry()"\n          ng-hide="status === \'finished\' || status === \'failed\'"\n          ng-disabled="status === \'performing\'">\n    Retry\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'finished\' || status === \'failed\'">\n    OK\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\n',f=function(a){a.registerDefaultView("cockpit.incident.action",{id:"increase-incident-external-task-retry",template:d,controller:["$scope","$rootScope","search","$modal",function(a,b,d,f){a.openExternalTaskRetryDialog=function(b){var d=f.open({resolve:{incident:function(){return b}},controller:"ExternalTaskRetryController",template:e});d.result.then(function(b){"finished"===b&&a.processData.set("filter",c.extend({},a.filter))})}}],priority:50})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],32:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-job-retry-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openJobRetryDialog(incident)"\n   ng-show="incident.incidentType === \'failedJob\' && incident.configuration"\n   tooltip="Increment Number of Retries of Failed Job"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-repeat"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incident-job-retry-action.html -->',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\n<div class="modal-header">\n  <h3>Increment Number of Retries</h3>\n</div>\n\n<div class="job-retry modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'finished\' || status === \'failed\'">\n    <p>The number of retries of the corresponding failed job of the selected incident will be incremented.</p>\n    <p>Are you sure to increment the number of retries?</p>\n  </div>\n\n  <div ng-show="status === \'finished\'">\n    The number of retries of the corresponding failed job of the selected incident has been incremented successfully.\n  </div>\n\n  <div ng-show="status === \'failed\'">\n    The number of retries of the corresponding failed job of the selected incident could not be incremented successfully.\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="close(status)"\n          ng-disabled="status === \'performing\'"\n          ng-hide="status === \'finished\' || status === \'failed\'">\n    Close\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="incrementRetry()"\n          ng-hide="status === \'finished\' || status === \'failed\'"\n          ng-disabled="status === \'performing\'">\n    Retry\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'finished\' || status === \'failed\'">\n    OK\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-dialog.html -->\n',f=function(a){
a.registerDefaultView("cockpit.incident.action",{id:"increase-incident-job-retry",template:d,controller:["$scope","$rootScope","search","$modal",function(a,b,d,f){a.openJobRetryDialog=function(b){var d=f.open({resolve:{incident:function(){return b}},controller:"JobRetryController",template:e});d.result.then(function(b){"finished"===b&&a.processData.set("filter",c.extend({},a.filter))})}}],priority:50})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],33:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incidents-tab.html -->\n<div cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-empty="No incidents">\n  <table class="incidents-tab cam-table">\n    <thead>\n      <tr>\n        <th class="message">Message</th>\n        <th class="timestamp">Timestamp</th>\n        <th class="activity">Activity</th>\n        <th class="cause instance-id uuid">Cause Process Instance ID</th>\n        <th class="cause-root instance-id uuid">Root Cause Process Instance ID</th>\n        <th class="type">Type</th>\n        <th class="action">Action</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr ng-repeat="incident in incidents">\n        <td class="message"\n            ng-show="incident.incidentType === \'failedJob\'">\n          <!--\n            it would be great to be able to copy the stacktrace from here\n            using the clipboard widget but it comes from an API endpoint...\n          -->\n          <a ng-if="incident.rootCauseIncidentMessage"\n             href="{{ getJobStacktraceUrl(incident) }}"\n             target="_blank"\n             tooltip="Open stacktrace in new window"\n             tooltip-placement="top"\n             class="auto-cutoff">\n            {{ incident.rootCauseIncidentMessage }}\n          </a>\n          <a ng-if="!incident.rootCauseIncidentMessage"\n             href="{{ getJobStacktraceUrl(incident) }}"\n             target="_blank"\n             tooltip="Open stacktrace in new window"\n             tooltip-placement="top">\n            <i>Message is null.</i>\n          </a>\n        </td>\n        <td class="message"\n            ng-if="incident.incidentType !== \'failedJob\' && incident.rootCauseIncidentMessage">\n          <div class="auto-cutoff"\n               cam-widget-clipboard="incident.rootCauseIncidentMessage">\n            {{ incident.rootCauseIncidentMessage }}\n          </div>\n        </td>\n        <td class="message"\n            ng-if="incident.incidentType !== \'failedJob\' && !incident.rootCauseIncidentMessage">\n          <i>Message is null.</i>\n        </td>\n\n        <td class="timestamp">\n          {{ incident.incidentTimestamp }}\n        </td>\n\n        <td class="activity">\n          <span ng-show="incident.linkable"\n                cam-widget-clipboard="incident.activityId">\n            <a ng-href="#/process-instance/{{ processInstance.id }}/runtime?activityIds={{ incident.activityId }}&amp;detailsTab=incidents-tab">\n              {{ incident.activityName }}\n            </a>\n          </span>\n          <span ng-hide="incident.linkable">\n            {{ incident.activityName }}\n          </span>\n        </td>\n\n        <td class="cause instance-id">\n          <span ng-show="incident.causeIncidentProcessInstanceId !== incident.processInstanceId"\n                cam-widget-clipboard="incident.causeIncidentProcessInstanceId">\n            <a ng-href="#/process-instance/{{incident.causeIncidentProcessInstanceId}}/runtime?activityIds={{ incident.causeIncidentActivityId }}&amp;detailsTab=incidents-tab">\n              {{ incident.causeIncidentProcessInstanceId }}\n            </a>\n          </span>\n        </td>\n\n        <td class="cause-root instance-id">\n          <span ng-show="incident.rootCauseIncidentProcessInstanceId !== incident.processInstanceId"\n                cam-widget-clipboard="incident.rootCauseIncidentProcessInstanceId">\n            <a ng-href="#/process-instance/{{incident.rootCauseIncidentProcessInstanceId}}/runtime?activityIds={{ incident.rootCauseIncidentActivityId }}&amp;detailsTab=incidents-tab">\n              {{ incident.rootCauseIncidentProcessInstanceId }}\n            </a>\n          </span>\n        </td>\n\n        <td class="type">\n          {{ getIncidentType(incident) }}\n        </td>\n\n        <td class="action">\n          <span ng-repeat="actionProvider in incidentActions">\n            <view provider="actionProvider"\n              vars="incidentVars" />\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n\n  <pagination ng-if="pages.total > pages.size"\n              class="pagination-sm"\n\n              page="pages.current"\n              ng-model="pages.current"\n\n              total-items="pages.total"\n              items-per-page="pages.size"\n\n              max-size="7"\n              boundary-links="true"></pagination>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/incidents-tab.html -->\n',e=function(a){a.registerDefaultView("cockpit.processInstance.runtime.tab",{id:"incidents-tab",label:"Incidents",template:d,controller:["$scope","$http","$modal","search","Uri","Views",function(a,b,d,e,f,g){function h(d,e,g){m=c.copy(d),delete m.page,delete m.activityInstanceIds,delete m.scrollToBpmnElement;var h=l.current,i=l.size,k=(h-1)*i,n={processInstanceIdIn:[j.id]},o={firstResult:k,maxResults:i},p=c.extend({},m,n);p.activityIdIn=p.activityIds,delete p.activityIds,a.incidents=null,b.post(f.appUri("plugin://base/:engine/incident/count"),p).success(function(a){l.total=a.count}),a.loadingState="LOADING",b.post(f.appUri("plugin://base/:engine/incident"),p,{params:o}).success(function(b){c.forEach(b,function(a){var b=a.activityId,c=e[b];a.activityName=c&&(c.name||c.id)||b,a.linkable=e[b]&&g[b]&&g[b].length>0}),a.incidents=b,a.loadingState=b.length?"LOADED":"EMPTY"})}var i=a.processData.newChild(a),j=a.processInstance,k={size:50,total:0,current:1},l=a.pages=c.copy(k),m=null;a.$watch("pages.current",function(a,b){a!=b&&e("page",a&&1!=a?a:null)}),i.observe(["filter","bpmnElements","activityIdToInstancesMap"],function(a,b,c){l.current=a.page||1,h(a,b,c)}),a.getIncidentType=function(a){return"failedJob"===a.incidentType?"Failed Job":a.incidentType},a.getJobStacktraceUrl=function(a){return f.appUri("engine://engine/:engine/job/"+a.rootCauseIncidentConfiguration+"/stacktrace")},a.incidentVars={read:["incident","processData","filter"]},a.incidentActions=g.getProviders({component:"cockpit.incident.action"})}],priority:15})};e.$inject=["ViewsProvider"],b.exports=e}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],34:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-dialog.html -->\n<div class="modal-header">\n  <h3>Increment Number of Retries</h3>\n</div>\n\n<div class="job-retry-bulk modal-body">\n  <div notifications-panel></div>\n\n  <form name="selectFailedJobsForm"\n        ng-hide="status === \'finished\' || status === \'performing\'">\n    <fieldset>\n      <p>Select one of the following failed jobs to increment their number of retries:</p>\n      <div cam-widget-loader\n           loading-state="{{ loadingState }}"\n           text-empty="There are no failed jobs available to increment their retries.">\n        <table class="cam-table">\n          <thead>\n            <tr>\n              <th class="row-select">\n                <input type="checkbox"\n                       title="Select all"\n                       ng-model="allJobsSelected"\n                       ng-change="selectAllJobs(allJobsSelected)">\n              </th>\n              <th class="job-id uuid">ID</th>\n              <th class="scope">Scope</th>\n              <th class="exception">Exception</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr ng-repeat="job in failedJobs">\n              <td class="row-select">\n                <input type="checkbox"\n                       ng-model="job.selected"\n                       ng-change="selectFailedJob(job)">\n              </td>\n\n              <td class="job-id uuid">{{ job.id }}</td>\n\n              <td class="scope">{{ job.instance.name }}</td>\n\n              <td class="exception">{{ job.exceptionMessage }}</td>\n            </tr>\n          </tbody>\n        </table>\n\n\n        <pagination ng-if="jobPages.total > jobPages.size"\n                    class="pagination-sm"\n\n                    page="jobPages.current"\n                    ng-model="jobPages.current"\n\n                    total-items="jobPages.total"\n                    items-per-page="jobPages.size"\n\n                    max-size="7"\n                    boundary-links="true"></pagination>\n      </div>\n    </fieldset>\n  </form>\n\n  <div ng-show="status === \'finished\' || status === \'performing\'">\n\n    <table class="cam-table">\n      <thead>\n        <tr>\n          <th class="job-id uuid">ID</th>\n          <th class="scope">Scope</th>\n          <th class="status">Status</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr ng-repeat="job in showJobsRetried">\n          <td class="job-id uuid">{{ job.id }}</td>\n\n          <td class="scope">{{ job.instance.name }}</td>\n\n          <td class="status">\n            <span ng-show="job.status && job.status === \'performing\'">\n              <span class="glyphicon glyphicon-loading"></span>\n            </span>\n            <span ng-show="job.status && job.status === \'successful\'">\n              <span class="glyphicon glyphicon-ok"></span>&nbsp;Successful\n            </span>\n            <span ng-show="job.status && job.status === \'failed\'">\n              <span class="glyphicon glyphicon-remove"></span>&nbsp;Failed\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n\n    <pagination ng-if="summarizePages.total > summarizePages.size"\n                class="pagination-sm"\n\n                page="summarizePages.current"\n                ng-model="summarizePages.current"\n\n                total-items="summarizePages.total"\n                items-per-page="summarizePages.size"\n\n                max-size="7"\n                boundary-links="true"></pagination>\n  </div>\n\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="close()"\n          ng-hide="status === \'finished\' || status === \'performing\'">\n    Close\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="retryFailedJobs(selectedFailedJobIds)"\n          ng-disabled="!failedJobs || !failedJobs.length || !selectedFailedJobIds.length"\n          ng-hide="status === \'finished\' || status === \'performing\'">\n    Retry <span ng-if="selectedFailedJobIds.length > 1">{{ selectedFailedJobIds.length }} jobs</span>\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close()"\n          ng-disabled="status === \'performing\'"\n          ng-show="status === \'performing\' || status === \'finished\'">\n    OK\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-dialog.html -->\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-action.html -->\n<a class="btn btn-default btn-toolbar"\n   href\n   ng-click="openDialog()"\n   tooltip="Increment Number of Retries of Failed Jobs"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-repeat"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/job-retry-bulk-action.html -->\n';b.exports=function(a){a.controller("JobRetryActionController",["$scope","$modal",function(a,b){a.openDialog=function(){b.open({resolve:{processData:function(){return a.processData},processInstance:function(){return a.processInstance}},size:"lg",controller:"JobRetriesController",template:d})}}]);var b=function(a){a.registerDefaultView("cockpit.processInstance.runtime.action",{id:"job-retry-action",label:"Job Retry Action",template:e,controller:"JobRetryActionController",priority:15})};b.$inject=["ViewsProvider"],a.config(b)}},{}],35:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$q","Notifications","JobResource","$modalInstance","processData","processInstance",function(a,b,d,e,f,g,h){function i(b){a.failedJobs=null,a.allJobsSelected=!1,a.loadingState="LOADING";var c=m.size,d=(b-1)*c;e.count({processInstanceId:h.id,withException:!0}).$promise.then(function(b){return m.total=b.count,m.total?void e.query({firstResult:d,maxResults:c},{processInstanceId:h.id,withException:!0,noRetriesLeft:!0}).$promise.then(function(b){for(var d,e=0;d=b[e];e++){o[d.id]=d;var f=v[d.executionId];d.instance=f,d.selected=p.indexOf(d.id)>-1}a.failedJobs=b,a.loadingState="LOADED",m.total<=c&&(a.allJobsSelected=!0,a.selectAllJobs(!0))}):void(a.loadingState="EMPTY")})}function j(b){for(var c=n.size,d=(b-1)*c,e=a.showJobsRetried=[],f=0;f<c;f++){var g=p[f+d],h=o[g];h&&e.push(h)}}function k(a){function c(a){a.status=s,e.setRetries({id:a.id},{retries:1},function(){a.status=t,g-=1,0===g&&f.resolve()},function(b){q=!0,a.status=u,a.retryError=b,g-=1,0===g&&f.resolve()})}for(var d,f=b.defer(),g=a.length,h=0;d=a[h];h++){var i=o[d];c(i)}return f.promise}var l=g.newChild(a),m=a.jobPages={size:5,total:0},n=a.summarizePages={size:5,total:0},o={},p=a.selectedFailedJobIds=[],q=!1;a.allJobsSelected=!1;var r="finished",s="performing",t="successful",u="failed",v=l.observe("executionIdToInstanceMap",function(a){v=a});a.$on("$routeChangeStart",function(){f.close(a.status)}),a.$watch("jobPages.current",function(a,b){return a?void(a!==b&&(m.current=a,i(a))):void(m.current=1)}),a.$watch("summarizePages.current",function(a){a&&j(a)}),a.selectAllJobs=function(b){c.forEach(a.failedJobs,function(a){a.selected=b,w(a)})};var w=a.selectFailedJob=function(b){var c=p.indexOf(b.id);return b.selected===!0?void(c===-1&&p.push(b.id)):b.selected===!1?(p.splice(c,1),void(a.allJobsSelected===!0&&(a.allJobsSelected=!1))):void 0};a.retryFailedJobs=function(b){a.status=s,n.total=b.length,n.current=1,k(b).then(function(){q?d.addError({status:"Finished",message:"Incrementing the number of retries finished with failures.",exclusive:!0}):d.addMessage({status:"Finished",message:"Incrementing the number of retries finished.",exclusive:!0}),a.status=r})},a.close=function(a){f.close(a)}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],36:[function(a,b,c){"use strict";b.exports=["$scope","$location","Notifications","JobResource","$modalInstance","incident",function(a,b,c,d,e,f){var g="finished",h="performing",i="failed";a.$on("$routeChangeStart",function(){e.close(a.status)}),a.incrementRetry=function(){a.status=h,d.setRetries({id:f.configuration},{retries:1},function(){a.status=g,c.addMessage({status:"Finished",message:"Incrementing the number of retries finished successfully.",exclusive:!0})},function(b){a.status=i,c.addError({status:"Finished",message:"Incrementing the number of retries was not successful: "+b.data.message,exclusive:!0})})},a.close=function(a){e.close(a)}}]},{}],37:[function(a,b,c){(function(a){"use strict";var c='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-action.html -->\n<a class="btn btn-default btn-toolbar btn-suspend-action"\n   href\n   ng-click="openDialog()"\n   tooltip="Suspend Process Instance"\n   tooltip-placement="left"\n   ng-show="!processInstance.suspended">\n  <span class="glyphicon glyphicon-pause"></span>\n</a>\n<a class="btn btn-default btn-toolbar"\n   href\n   ng-click="openDialog()"\n   tooltip="Activate Process Instance"\n   tooltip-placement="left"\n   ng-hide="!processInstance.suspended">\n  <span class="glyphicon glyphicon-play"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-action.html -->\n',d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-dialog.html -->\n<div class="modal-header">\n  <h3>{{ (processInstance.suspended ? \'Activate\' : \'Suspend\') }} Process Instance</h3>\n</div>\n\n<div class="process-instance update-suspension-state modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n\n    <div ng-show="processInstance.suspended">\n      <!-- activation -->\n      <p>\n        Activating a process instance means that the execution is running, so the <i>token state</i> will change.\n      </p>\n\n      <p>\n        Tasks belonging to this process instance will also be activated.\n      </p>\n\n      <p>\n        If a process instance is in the state active, the engine will also execute jobs associated with this process instance.\n      </p>\n\n      <p>\n        If this process instance have a process instance hierarchy, activating this process instance from the hierarchy will not activate other process instances from that hierarchy.\n      </p>\n\n      <p>Do you really want to activate this process instance?</p>\n    </div>\n\n    <div ng-hide="processInstance.suspended">\n      <!-- suspension -->\n      <p>\n        Suspending a process instance means that the execution is stopped, so the <i>token state</i> will not change. However, actions that do not change token state, like setting or removing variables, etc. will still succeed.\n      </p>\n\n      <p>\n        Tasks belonging to this process instance will also be suspended. This means that any actions influencing the tasks\' lifecycles will fail, such as\n        <ul>\n          <li>claiming</li>\n          <li>completing</li>\n          <li>delegation</li>\n          <li>changes in task assignees, owners, etc.</li>\n        </ul>\n        Actions that only change task properties will still succeed, such as changing variables.\n      </p>\n\n      <p>\n        If a process instance is in the state suspended, the engine will also not execute jobs associated with this process instance.\n      </p>\n\n      <p>\n        If this process instance have a process instance hierarchy, suspending this process instance from the hierarchy will not suspend other process instances from that hierarchy.\n      </p>\n\n      <p>Do you really want to suspend this process instance?</p>\n    </div>\n\n  </div>\n\n  <div ng-show="status === \'SUCCESS\'">\n    <p ng-show="processInstance.suspended">\n      The suspension state of the process instance has been updated to "active" successfully.\n    </p>\n    <p ng-hide="processInstance.suspended">\n      The suspension state of the process instance has been updated to "suspended" successfully.\n    </p>\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    <p ng-show="processInstance.suspended">\n      The suspension state of the process instance could not be updated to "active" successfully.\n    </p>\n    <p ng-hide="processInstance.suspended">\n      The suspension state of the process instance could not be updated to "suspended" successfully.\n    </p>\n  </div>\n\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORM_UDPATE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">Close</button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="updateSuspensionState()"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="status === \'PERFORM_UDPATE\'">\n    {{ (processInstance.suspended ? \'Activate\' : \'Suspend\') }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">OK</button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/update-suspension-state-dialog.html -->\n',e="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,f=function(a){a.registerDefaultView("cockpit.processInstance.runtime.action",{id:"update-suspension-state-action",label:"Update Suspension State",template:c,controller:["$scope","$rootScope","$modal",function(a,b,c){a.openDialog=function(){var f=c.open({resolve:{processData:function(){return a.processData},processInstance:function(){return a.processInstance}},controller:"UpdateProcessInstanceSuspensionStateController",template:d});f.result.then(function(c){"SUCCESS"===c.status&&(a.processInstance.suspended=c.suspended,b.$broadcast("$processInstance.suspensionState.changed",a.processInstance),a.processData.set("filter",e.extend({},a.filter)))})}}],priority:5})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],38:[function(a,b,c){"use strict";b.exports=["$scope","$http","$filter","Uri","Notifications","$modalInstance","processInstance",function(a,b,c,d,e,f,g){var h="BEFORE_UPDATE",i="PERFORM_UDPATE",j="SUCCESS",k="FAIL";a.processInstance=g,a.status=h,a.$on("$routeChangeStart",function(){f.close(a.status)}),a.updateSuspensionState=function(){a.status=i;var c={};c.suspended=!g.suspended,b.put(d.appUri("engine://engine/:engine/process-instance/"+g.id+"/suspended/"),c).success(function(){a.status=j,e.addMessage({status:"Finished",message:"Updated the suspension state of the process instance.",exclusive:!0})}).error(function(b){a.status=k,e.addError({status:"Finished",message:"Could not update the suspension state of the process instance: "+b.message,exclusive:!0})})},a.close=function(a){var b={};b.status=a,b.suspended=!g.suspended,f.close(b)}}]},{}],39:[function(a,b,c){(function(c){"use strict";var d=a("../../../../../../common/scripts/util/search-widget-utils"),e="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,f='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/identity-links-modal.html -->\n<div class="modal-header">\n  <h3 class="modal-title">{{ title }}</h3>\n</div>\n\n<div class="identity-links modal-body">\n  <div notifications-panel></div>\n\n  <form name="editForm"\n        ng-submit="!invalid() && addItem()">\n    <fieldset ng-show="identityLinks.length">\n      <legend>{{ decorator.table.label }}</legend>\n\n      <table class="table cam-table">\n        <thead>\n          <tr>\n            <th class="id">{{ decorator.table.id }}</th>\n            <th class="action text-right">Action</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr ng-repeat="(delta, identityLink) in identityLinks">\n            <td class="id">{{ identityLink[key] }}</td>\n            <td class="action text-right">\n              <span class="btn btn-default action-button"\n                    ng-click="removeItem()">\n                <span class="glyphicon glyphicon-ban-circle"></span>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </fieldset>\n\n    <fieldset>\n      <legend>{{ decorator.add.label }}</legend>\n\n      <div class="input-group">\n        <input class="form-control"\n               type="text"\n               ng-model="newItem"\n               name="newItem"\n               required />\n        <span class="btn btn-primary input-group-addon"\n              ng-click="addItem()"\n              ng-disabled="invalid()">\n          <span class="glyphicon glyphicon-plus"></span>\n        </span>\n      </div>\n    </fieldset>\n  </form>\n</div>\n\n<div class="modal-footer">\n  <button ng-click="$dismiss()"\n          class="btn btn-default">\n    Close\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/identity-links-modal.html -->\n',g='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/user-tasks-table.html -->\n<div cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-empty="No user tasks">\n  <table class="process-instance user-tasks cam-table">\n    <thead>\n      <tr>\n        <th class="activity uuid">Activity</th>\n        <th class="assignee">Assignee</th>\n        <th class="owner">Owner</th>\n        <th class="created">Creation Date</th>\n        <th class="due">Due Date</th>\n        <th class="follow-up">Follow Up Date</th>\n        <th class="priority">Priority</th>\n        <th class="delegation-state">Delegation State</th>\n        <th class="task-id uuid">Task ID</th>\n        <th class="action">Action</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr ng-repeat="userTask in userTasks">\n        <td class="activity">\n          <a ng-href="{{ getHref(userTask) }}">{{ userTask.instance.name || userTask.instance.id }}</a>\n        </td>\n\n        <td class="assignee">\n          <cam-in-place-text-field\n            submit="submitAssigneeChange"\n            context="userTask"\n            property="assignee" />\n        </td>\n\n        <td class="owner">\n          {{ userTask.owner }}\n        </td>\n\n        <td class="created">\n          {{ userTask.created }}\n        </td>\n        <td class="due">\n          {{ userTask.due }}\n        </td>\n        <td class="follow-up">\n          {{ userTask.followUp }}\n        </td>\n        <td class="priority">\n          {{ userTask.priority }}\n        </td>\n        <td class="delegation-state">\n          {{ userTask.delegationState }}\n        </td>\n        <td class="task-id uuid"\n            cam-widget-clipboard="userTask.id">\n          {{ userTask.id }}\n        </td>\n\n        <td class="action">\n          <a ng-click="changeGroupIdentityLinks()"\n             ng-model="userTask"\n             class="btn btn-default action-button change-group-identity-links"\n             tooltip-placement="left"\n             tooltip="Manage group(s) for \'{{ userTask.name || userTask.id }}\'">\n            <span class="glyphicon glyphicon-th"></span>\n          </a>\n          <a ng-click="changeUserIdentityLinks()"\n             ng-model="userTask"\n             class="btn btn-default action-button change-user-identity-links"\n             tooltip-placement="left"\n             tooltip="Manage user(s) for \'{{ userTask.name || userTask.id }}\'">\n            <span class="glyphicon glyphicon-user"></span>\n          </a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n\n  <pagination ng-if="pages.total > pages.size"\n              class="pagination-sm"\n\n              page="pages.current"\n              ng-model="pages.current"\n\n              total-items="pages.total"\n              items-per-page="pages.size"\n\n              max-size="7"\n              boundary-links="true"></pagination>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/user-tasks-table.html -->\n';b.exports=function(a){function b(a,b){var c=[];return e.forEach(a,function(a,d){c[d]=b(a,d)}),c}function c(a){var b=[];return e.forEach(a,function(a){a&&b.push(a)}),b}function h(a){return e.isFunction(a)?a:e.noop}a.controller("UserTaskController",["$scope","search","camAPI","TaskResource","Notifications","$modal",function(a,g,i,j,k,l){function m(b,c){t=e.copy(b),delete t.page,delete t.activityIds,delete t.scrollToBpmnElement;var d=s.current,f=s.size,g=(d-1)*f,h={processInstanceId:q.id,processDefinitionId:q.definitionId},i={firstResult:g,maxResults:f},k=e.extend({},t,h);k.activityInstanceIdIn=k.activityInstanceIds,delete k.activityInstanceIds,a.userTasks=null,a.loadingState="LOADING",n={},o={},j.count(k).$promise.then(function(a){s.total=a.count}),j.query(i,k).$promise.then(function(b){for(var d,f=0;d=b[f];f++)d.instance=c[d.executionId],o[d.id]=e.copy(d);a.userTasks=b,a.loadingState=b.length?"LOADED":"EMPTY"})}var n,o,p=a.processData.newChild(a),q=a.processInstance,r={size:50,total:0,current:1},s=a.pages=e.copy(r),t=null,u=i.resource("task");a.getSearchQueryForSearchType=d.getSearchQueryForSearchType.bind(null,"activityInstanceIdIn"),a.$watch("pages.current",function(a,b){a!=b&&g("page",a&&1!=a?a:null)}),p.observe(["filter","executionIdToInstanceMap"],function(a,b){s.current=a.page||1,m(a,b)}),a.getHref=function(b){return b.instance?"#/process-instance/"+q.id+"/runtime?detailsTab=user-tasks-tab&"+a.getSearchQueryForSearchType(b.instance.id):""},a.submitAssigneeChange=function(a,b){b=h(b);var c=a.context,d=o[c.id],e={id:c.id},f={userId:a.value};j.setAssignee(e,f).$promise.then(function(a){var e,f=d.assignee=c.assignee=a.userId;e=f?"The assignee of the user task '"+c.instance.name+"' has been set to '"+d.assignee+"' successfully.":"The assignee of the user task '"+c.instance.name+"' has been reseted successfully.",k.addMessage({status:"Assignee",message:e,duration:5e3}),b()},function(a){var e;e=c.assignee?"The assignee of the user task '"+c.instance.name+"' could not be set to '"+c.assignee+"'. "+a.data.message:"The assignee of the user task '"+c.instance.name+"' could not be reseted. "+a.data.message;var f={status:"Assignee",message:e,exclusive:!0};c.assignee=d.assignee,k.addError(f),n[c.id]=a.data,b(f)})},a.openDialog=function(a,d){u.identityLinks(a.id,function(e,g){var h=c(b(g,function(a){var b=a[d.key]&&"assignee"!==a.type&&"owner"!==a.type;return b?a:null}));l.open({resolve:{userTask:function(){return a},identityLinks:function(){return h},decorator:function(){return d}},controller:"IdentityLinksController",template:f,windowClass:"identity-link-modal"})})},a.changeGroupIdentityLinks=function(){var b=this.userTask;a.openDialog(b,{title:"Manage groups",table:{label:"Current group(s)",id:"Group ID"},add:{label:"Add a group"},notifications:{remove:"Could not remove group",add:"Could not add group"},key:"groupId"})},a.changeUserIdentityLinks=function(){var b=this.userTask;a.openDialog(b,{title:"Manage users",table:{label:"Current user(s)",id:"User ID"},add:{label:"Add a user"},notifications:{remove:"Could not remove user",add:"Could not add user"},key:"userId"})},a.getExceptionForUserTask=function(a){return n[a.id]}}]),a.controller("IdentityLinksController",["$modalInstance","camAPI","$scope","Notifications","userTask","identityLinks","decorator",function(a,d,f,g,h,i,j){var k=d.resource("task");f.identityLinks=i,f.decorator=j,f.title=j.title;var l=f.key=j.key;f.$on("$routeChangeStart",function(){a.close()}),f.removeItem=function(){var a=this.delta;k.identityLinksDelete(h.id,this.identityLink,function(d){return d?g.addError({status:j.notifications.remove,message:d.message,exclusive:!0}):void(i=f.identityLinks=c(b(i,function(b,c){return a!==c&&b})))})},f.invalid=function(){var a=this.editForm;if(a.$invalid)return!0;var b,c=a.newItem.$modelValue;return e.forEach(i,function(a){b=b||a[l]===c}),b},f.addItem=function(){var a=this,b={type:"candidate"};b[l]=a.newItem,k.identityLinksAdd(h.id,b,function(c){return c?g.addError({status:j.notifications.add,message:c.message,exclusive:!0}):(i.push(b),void(a.newItem=""))})}}]);var i=function(a){a.registerDefaultView("cockpit.processInstance.runtime.tab",{id:"user-tasks-tab",label:"User Tasks",template:g,controller:"UserTaskController",priority:5})};i.$inject=["ViewsProvider"],a.config(i)}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/search-widget-utils":75
}],40:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("../../../../../../common/scripts/util/search-widget-utils"),f=a("../../../../../../common/scripts/util/pagination-utils"),g=JSON.parse('{\n  "types": [\n    {\n      "id": {\n        "key": "variableName",\n        "value": "Variable Name"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        },\n        {\n          "key": "Like",\n          "value": "like"\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "activityInstanceIdIn",\n        "value": "Activity Instance ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "variableValues",\n        "value": "Variable Value"\n      },\n      "extended": true,\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        },\n        {\n          "key": "neq",\n          "value": "!="\n        },\n        {\n          "key": "gt",\n          "value": ">"\n        },\n        {\n          "key": "gteq",\n          "value": ">="\n        },\n        {\n          "key": "lt",\n          "value": "<"\n        },\n        {\n          "key": "lteq",\n          "value": "<="\n        },\n        {\n          "key": "like",\n          "value": "like"\n        }\n      ]\n    }\n  ],\n  "operators": {\n    "undefined":  [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "like"\n      }\n    ],\n    "string":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "like"\n      }\n    ],\n    "number":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      }\n    ],\n    "boolean":    [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      }\n    ],\n    "object":     [{\n      "key": "eq",\n      "value": "="\n    },\n      {\n        "key": "neq",\n        "value": "!="\n      }],\n    "date":     [{\n      "key": "lteq",\n      "value": "before"\n    },\n      {\n        "key": "gteq",\n        "value": "after"\n      }]\n  },\n  "tooltips": {\n    "inputPlaceholder": "Add criteria",\n    "invalid": "This search query is not valid",\n    "deleteSearch": "Remove search",\n    "type": "Type",\n    "name": "Property",\n    "operator": "Operator",\n    "value": "Value"\n  }\n}\n'),h='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/variable-instances-tab.html -->\n<div cam-widget-search\n     cam-widget-search-valid-searches="searchConfig.searches"\n     cam-widget-search-translations="searchConfig.tooltips"\n     cam-widget-search-types="searchConfig.types"\n     cam-widget-search-operators="searchConfig.operators"\n     cam-widget-search-mode="filter">\n</div>\n\n<div cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-empty="No process variables">\n  <!-- <div cam-widget-debug debugged="variables"></div> -->\n\n  <div cam-widget-variables-table\n       on-save="saveVariable"\n       on-edit="editVariable"\n       on-upload="uploadVariable"\n       on-delete="deleteVariable"\n       on-download="downloadVariable"\n       cam-variables="variables"\n       cam-editable="[\'type\', \'value\']"\n       cam-headers="{ name: \'Name\', value: \'Value\', type: \'Type\', scope: \'Scope\' }"></div>\n\n\n  <pagination ng-if="pages.total > pages.size"\n              class="pagination-sm"\n\n              page="pages.current"\n              ng-model="pages.current"\n\n              total-items="pages.total"\n              items-per-page="pages.size"\n\n              max-size="7"\n              boundary-links="true"></pagination>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/base/app/views/processInstance/variable-instances-tab.html -->\n',i=a("../../../../../client/scripts/components/variables/variable-inspect-dialog"),j=a("../../../../../client/scripts/components/variables/variable-upload-dialog");b.exports=function(a){a.controller("VariableInstancesController",["$scope","$sce","$http","search","Uri","LocalExecutionVariableResource","Notifications","$modal","$q","camAPI",function(a,b,c,h,k,l,m,n,o,p){function q(a){return"engine://engine/:engine/execution/"+a.executionId+"/localVariables/"+a.name}function r(b,f){var g=y.current,h=y.size,i=(g-1)*h,j={processInstanceIdIn:[v.id]},l={firstResult:i,maxResults:h,deserializeValues:!1},m=e.createSearchQueryForSearchWidget(f,["activityInstanceIdIn"],["variableValues"]),n=d.extend({},j,m);a.variables=null,a.loadingState="LOADING",c.post(k.appUri("engine://engine/:engine/variable-instance/count"),n).success(function(a){y.total=a.count}),s={},t={},c.post(k.appUri("engine://engine/:engine/variable-instance/"),n,{params:l}).success(function(c){a.variables=c.map(function(c){var e=b[c.activityInstanceId];c.instance=e,t[c.id]=d.copy(c);var f="";return e&&(f='<a ng-href="#/process-instance/'+v.id+"/runtime?detailsTab=variables-tab&"+a.getSearchQueryForSearchType(e.id)+'" title="'+e.id+'">'+e.name+"</a>"),{variable:{id:c.id,name:c.name,type:c.type,value:c.value,valueInfo:c.valueInfo,executionId:c.executionId},original:c,additions:{scope:{html:f,scopeVariables:{processData:a.processData}}}}}),a.loadingState=c.length?"LOADED":"EMPTY"})}var s,t,u=a.processData.newChild(a),v=a.processInstance,w=p.resource("execution"),x=p.resource("task"),y=f.initializePaginationInController(a,h,function(b,c){d.equals(b,c)||r(a.instanceIdToInstanceMap,a.searchConfig.searches)});u.provide("pages",y),a.searchConfig=d.copy(g),u.provide("searches",d.copy(a.searchConfig.searches)),a.$watch("searchConfig.searches",function(b,c){d.equals(b,c)||u.set("searches",d.copy(a.searchConfig.searches))}),u.observe("instanceIdToInstanceMap",function(b){a.instanceIdToInstanceMap=b}),a.getSearchQueryForSearchType=e.getSearchQueryForSearchType.bind(null,"activityInstanceIdIn"),a.$on("addVariableNotification",function(){r(a.instanceIdToInstanceMap,a.searchConfig.searches)}),u.observe(["instanceIdToInstanceMap","searches"],function(a,b){b&&r(a,b)}),a.uploadVariable=function(b){var c=o.defer();return n.open({resolve:{basePath:function(){return q(b.variable)},variable:function(){return b.variable}},controller:j.controller,template:j.template}).result.then(function(){c.reject(),u.set("filter",d.copy(a.filter))},function(){c.reject()}),c.promise},a.downloadVariable=function(a){return k.appUri("engine://engine/:engine/variable-instance/"+a.variable.id+"/data")},a.deleteVariable=function(a){var b=o.defer(),c=function(c){c?(m.addError({status:"Variable",message:"The variable '"+a.variable.name+"' could not be deleted successfully.",exclusive:!0,duration:5e3}),b.reject()):(m.addMessage({status:"Variable",message:"The variable '"+a.variable.name+"' has been deleted successfully.",duration:5e3}),b.resolve(a.variable))};return a.original.taskId?x.deleteVariable({id:a.original.taskId,varId:a.variable.name},c):w.deleteVariable({id:a.variable.executionId,varId:a.variable.name},c),b.promise},a.editVariable=function(b){var c=o.defer();return n.open({template:i.template,controller:i.controller,windowClass:"cam-widget-variable-dialog",resolve:{basePath:function(){return q(b.variable)},history:function(){return!1},readonly:function(){return!1},variable:function(){return b.variable}}}).result.then(function(){c.reject(),u.set("filter",d.copy(a.filter))},function(){c.reject()}),c.promise},a.saveVariable=function(a){var b=o.defer(),c=a.variable,e={},f=c.value,g=c.type,h={value:f,type:g};e[c.name]=h;var i=function(e){e?(m.addError({status:"Variable",message:"The variable '"+c.name+"' could not be changed successfully.",exclusive:!0,duration:5e3}),s[c.id]=e.data,b.reject()):(m.addMessage({status:"Variable",message:"The variable '"+c.name+"' has been changed successfully.",duration:5e3}),d.extend(c,h),b.resolve(a.variable))};return a.original.taskId?x.modifyVariables({id:a.original.taskId,modifications:e},i):w.modifyVariables({id:c.executionId,modifications:e},i),b.promise}}]);var b=function(a){a.registerDefaultView("cockpit.processInstance.runtime.tab",{id:"variables-tab",label:"Variables",template:h,controller:"VariableInstancesController",priority:20})};b.$inject=["ViewsProvider"],a.config(b)}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/pagination-utils":74,"../../../../../../common/scripts/util/search-widget-utils":75,"../../../../../client/scripts/components/variables/variable-inspect-dialog":4,"../../../../../client/scripts/components/variables/variable-upload-dialog":5}],41:[function(a,b,c){"use strict";var d='<!-- # CE - ui/cockpit/plugins/base/app/views/processesDashboard/process-definitions.html -->\n<section>\n  <div class="inner">\n    <header>\n      <div class="row">\n        <h1 class="col-xs-6 section-title">{{ processDefinitionData.length }} process {{ (processDefinitionData.length > 1 ? \'definitions\' : \'definition\') }} deployed</h1>\n\n\n        <div class="col-xs-6 text-right">\n          <ul class="nav nav-tabs" ng-if="processDefinitionData && processDefinitionData.length">\n            <li ng-class="{active: activeTab === \'list\'}">\n              <a ng-click="selectTab(\'list\')">List</a>\n            </li>\n            <li ng-class="{active: activeTab === \'previews\'}">\n              <a ng-click="selectTab(\'previews\')">Previews</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </header>\n\n\n\n    <div cam-widget-loader\n         loading-state="{{loadingState}}"\n         class="deployed-processes">\n      <table ng-if="activeTab === \'list\'"\n             class="process-definitions-list cam-table">\n        <thead>\n          <tr>\n            <th class="state">State</th>\n            <th class="instances">Running Instances</th>\n            <th class="name">Name</th>\n            <th class="tenant-id">Tenant ID</th>\n            <th ng-if="hasHistoryPlugin"\n                class="history-link">History view</th>\n            <th ng-if="hasReportPlugin"\n                class="report-link">Report</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr ng-repeat="pd in processDefinitionData | orderBy:[\'name || key\',\'tenantId\']:false">\n            <td class="state">\n              <div ng-if="pd.incidents.length > -1" state-circle incidents="pd.incidents"></div>\n              <div ng-if="pd.incidents == undefined">\n                <span class="glyphicon glyphicon-refresh animate-spin"></span>\n              </div>\n            </td>\n\n            <td ng-if="pd.instances >= 0" class="instances">\n              {{ pd.instances }}\n            </td>\n            <td ng-if="pd.instances == undefined">\n              <span class="glyphicon glyphicon-refresh animate-spin"></span>\n            </td>\n\n            <td class="name">\n              <a href="#/process-definition/{{ pd.id }}">\n                {{ pd.name || pd.key }}\n              </a>\n            </td>\n\n            <td class="tenant-id">\n              {{ pd.tenantId }}\n            </td>\n\n            <td ng-if="hasHistoryPlugin"\n                class="history-link">\n              <a href="#/process-definition/{{ pd.id }}/history">\n                History view\n              </a>\n            </td>\n\n            <td ng-if="hasReportPlugin"\n                class="report-link">\n              <a href="#/reports/reporting-duration-report?processDefinitionKey={{ pd.key }}">\n                <span class="glyphicon glyphicon-signal"></span>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div ng-if="activeTab === \'previews\'"\n           class="tile-grid">\n        <div ng-repeat="pd in processDefinitionData | orderBy:orderByPredicate:orderByReverse"\n             class="tile col-xs-12 col-sm-6 col-md-4 col-lg-3">\n          <a href="#/process-definition/{{ pd.id }}">\n            <h4 class="tile-header">\n              {{ pd.name || pd.key }}\n            </h4>\n\n            <span class="tile-body">\n              <span ng-if="activeTab === \'previews\'"\n                    process-diagram-preview\n                    process-definition-id="pd.id"></span>\n            </span>\n\n            <span class="tile-footer">\n              <span ng-if="pd.instances >= 0" class="instances">\n                {{ (pd.instances < 1 ? \'No\' : pd.instances) }}\n                running\n                {{ ((pd.instances === 1 || pd.instances === \'1\') ? \'instance\' : \'instances\') }}\n              </span>\n              <span ng-if="pd.instances == undefined" class="instances">\n                <span class="glyphicon glyphicon-refresh animate-spin"></span>\n              </span>\n\n              <span ng-if="pd.incidents.length > -1" state-circle\n                    incidents="pd.incidents"\n                    class="circle-tiles"></span>\n              <span ng-if="pd.incidents == undefined" class="circle-tiles"></span>\n            </span>\n          </a>\n        </div>\n      </div>\n\n      <h3 ng-if="!processDefinitionData || !processDefinitionData.length">\n        No process definitions deployed\n      </h3>\n\n    </div>\n\n\n  </div>\n</section>\n\n<!-- / CE - ui/cockpit/plugins/base/app/views/processesDashboard/process-definitions.html -->\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.processes.dashboard",{id:"process-definition",label:"Deployed Process Definitions",template:d,controller:["$scope","Views","camAPI",function(a,b,c){var d=b.getProviders({component:"cockpit.processInstance.view"});a.hasHistoryPlugin=d.filter(function(a){return"history"===a.id}).length>0;var e=a.processData.newChild(a);a.hasReportPlugin=b.getProviders({component:"cockpit.report"}).length>0;var f=c.resource("process-definition");a.loadingState="LOADING",f.list({latest:!0},function(b,c){a.processDefinitionData=c.items,b&&(a.loadingState="ERROR"),a.loadingState="LOADED",e.observe("processDefinitionStatistics",function(b){a.statistics=b,a.statistics.forEach(function(b){var c=b.definition.id,d=a.processDefinitionData.filter(function(a){return a.id===c}),e=d[0];e&&(e.incidents=b.incidents,e.instances=b.instances)})})}),a.activeTab="list",a.selectTab=function(b){a.activeTab=b}}],priority:0})}]},{}],42:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./base/app/plugin"),f=a("./decisionList/app/plugin"),g=a("./jobDefinition/app/plugin"),h=a("./tasks/app/plugin");b.exports=d.module("cockpit.plugin.cockpitPlugins",[e.name,f.name,g.name,h.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./base/app/plugin":9,"./decisionList/app/plugin":43,"./jobDefinition/app/plugin":64,"./tasks/app/plugin":70}],43:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./views/main");b.exports=d.module("cockpit.plugin.decisionList",[e.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./views/main":56}],44:[function(a,b,c){"use strict";var d='<section>\n  <div class="inner">\n    <header>\n      <h1 class="section-title">{{decisionCount}} decision {{ (decisionCount > 1 ? \'definitions\' : \'definition\') }}  deployed</h1>\n    </header>\n\n    <table class="decision-definitions-list cam-table"\n           ng-if="decisionCount">\n      <thead>\n      <tr>\n        <th class="name">Name</th>\n        <th class="tenant-id">Tenant ID</th>\n        <th class="tenant-id" ng-if="isDrdAvailable">Decision Requirements Definition</th>\n      </tr>\n      </thead>\n\n      <tbody>\n      <tr ng-repeat="decision in decisions | orderBy:[\'name || key\',\'tenantId\']:false">\n        <td class="name">\n          <a href="#/decision-definition/{{ decision.id }}">\n            {{ decision.name || decision.key }}\n          </a>\n        </td>\n        <td class="tenant-id">\n          {{ decision.tenantId }}\n        </td>\n        <td class="drd" ng-if="isDrdAvailable">\n          <a href="#/decision-requirement/{{ decision.drd.id }}">\n            {{ decision.drd.name || decision.drd.key }}\n          </a>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n\n    <h3 ng-if="!decisionCount">\n      No decision tables deployed\n    </h3>\n  </div>\n</section>\n\n';b.exports=function(){return{restrict:"A",template:d,scope:{decisionCount:"=",decisions:"=",isDrdAvailable:"="}}}},{}],45:[function(a,b,c){"use strict";var d='<section ng-if="isDrdAvailable">\n  <div class="inner">\n    <header>\n      <h1 class="section-title">{{drdsCount}} decision requirements\n        {{ (drdsCount > 1 ? \'definitions\' : \'definition\') }} deployed</h1>\n    </header>\n\n    <table class="drd-definitions-list cam-table" ng-if="drdsCount">\n      <thead>\n        <tr>\n          <th class="name">Name</th>\n          <th class="tenant-id">Tenant ID</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr ng-repeat="drd in drds | orderBy:[\'name || key\',\'tenantId\']:false">\n          <td class="name">\n            <a href="#/decision-requirement/{{ drd.id }}">\n              {{ drd.name || drd.key }}\n            </a>\n          </td>\n          <td class="tenant-id">\n            {{ drd.tenantId }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3 ng-if="!drdsCount">\n      No decision requirements definitions deployed\n    </h3>\n  </div>\n</section>\n';b.exports=function(){return{restrict:"A",template:d,scope:{drds:"=",drdsCount:"=",isDrdAvailable:"="}}}},{}],46:[function(a,b,c){"use strict";b.exports=["$scope","decisionList","isModuleAvailable",function(a,b,c){a.loadingState="LOADING",a.isDrdAvailable=c("cockpit.plugin.drd"),b.getDecisionsLists().then(function(b){a.loadingState="LOADED",a.decisionCount=b.decisions.length,a.decisions=b.decisions,a.drdsCount=b.drds.length,a.drds=b.drds})["catch"](function(b){throw a.loadingError=b.message,a.loadingState="ERROR",b})}]},{}],47:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e="undefined"!=typeof window?window["cam-common"]:"undefined"!=typeof c?c["cam-common"]:null,f=a("./views/decision-list"),g=a("./controllers/decision-list"),h=a("./services/decision-list"),i=a("./components/decisions-table"),j=a("./components/drds-table"),k=d.module("cockpit.plugin.decisionList.views.dashboard",[e.name]);k.config(f),k.factory("decisionList",h),k.controller("DecisionListController",g),k.directive("decisionsTable",i),k.directive("drdsTable",j),b.exports=k}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./components/decisions-table":44,"./components/drds-table":45,"./controllers/decision-list":46,"./services/decision-list":48,"./views/decision-list":49}],48:[function(a,b,c){"use strict";b.exports=["$q","camAPI",function(a,b){function c(){var b=f.list({latestVersion:!0,sortBy:"name",sortOrder:"asc"}),c=g.list({latestVersion:!0,sortBy:"name",sortOrder:"asc"});return a.all({decisions:b,drds:c}).then(function(a){return a.decisions=d(a.drds,a.decisions),a})}function d(a,b){return b.map(function(b){return b.decisionRequirementsDefinitionId&&(b.drd=e(a,b.decisionRequirementsDefinitionId)),b})}function e(a,b){return a.filter(function(a){return a.id===b})[0]}var f=b.resource("decision-definition"),g=b.resource("drd");return{getDecisionsLists:c}}]},{}],49:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/dashboard/decision-list.html -->\n<div class="deployed-decisions"\n     cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-error="{{ loadingError }}">\n\n  <div decisions-table\n       decisions="decisions"\n       decision-count="decisionCount"\n       is-drd-available="isDrdAvailable">\n  </div>\n\n  <div drds-table\n       drds="drds"\n       drds-count="drdsCount"\n       is-drd-available="isDrdAvailable">\n  </div>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/dashboard/decision-list.html -->\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisions.dashboard",{id:"decision-list",label:"Deployed Decision Tables",template:d,controller:"DecisionListController",priority:-5})}]},{}],50:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./../../../../../../common/scripts/util/search-widget-utils").createSearchQueryForSearchWidget,f='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionDefinition/decision-instance-table.html -->\n<div cam-widget-search\n     cam-widget-search-valid-searches="decisionSearchConfig.searches"\n     cam-widget-search-translations="decisionSearchConfig.tooltips"\n     cam-widget-search-types="decisionSearchConfig.types"\n     cam-widget-search-operators="decisionSearchConfig.operators"\n     cam-widget-search-mode="filter">\n</div>\n\n<div cam-widget-loader\n     loading-state="{{ loadingState }}"\n     text-empty="No decision instances matched by current filter.">\n  <table class="decision-instances cam-table cam-fixed-layout">\n    <thead>\n      <tr>\n        <th class="instance-id">ID</th>\n        <th class="start-time">Evaluation Time</th>\n        <th class="definition-key">Calling Process/Case</th>\n        <th class="instance-id">Calling Instance ID</th>\n        <th class="activity-id">Activity ID</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="decisionInstance in decisionInstances">\n        <td class="instance-id"\n            cam-widget-clipboard="decisionInstance.id">\n          <a ng-href="#/decision-instance/{{ decisionInstance.id }}" title="{{ decisionInstance.id }}">\n            {{ decisionInstance.id }}\n          </a>\n        </td>\n\n        <td class="start-time"\n            cam-widget-clipboard="decisionInstance.evaluationTime">\n          {{ decisionInstance.evaluationTime | camDate }}\n        </td>\n\n        <td class="definition-key"\n            ng-if="decisionInstance.processDefinitionKey"\n            cam-widget-clipboard="decisionInstance.processDefinitionKey">\n          <a ng-href="{{ getProcessDefinitionLink(decisionInstance) }}">\n            {{ decisionInstance.processDefinitionKey }}\n          </a>\n        </td>\n        <td class="definition-key"\n            ng-if="decisionInstance.caseDefinitionKey"\n            cam-widget-clipboard="decisionInstance.caseDefinitionKey">\n          <a ng-if="hasCasePlugin"\n             ng-href="#/case-definition/{{ decisionInstance.caseDefinitionId }}?searchQuery={{ getActivitySearch(decisionInstance) }}">\n            {{ decisionInstance.caseDefinitionKey }}\n          </a>\n          <span ng-if="!hasCasePlugin">\n            {{ decisionInstance.caseDefinitionKey }}\n          </span>\n        </td>\n        <td class="definition-key"\n            ng-if="!decisionInstance.processDefinitionKey && !decisionInstance.caseDefinitionKey">\n        </td>\n\n        <td class="instance-id"\n            ng-if="decisionInstance.processInstanceId"\n            cam-widget-clipboard="decisionInstance.processInstanceId">\n          <a ng-href="{{ getProcessInstanceLink(decisionInstance) }}">\n            {{ decisionInstance.processInstanceId }}\n          </a>\n        </td>\n        <td class="instance-id"\n            ng-if="decisionInstance.caseInstanceId"\n            cam-widget-clipboard="decisionInstance.caseInstanceId">\n          <a ng-if="hasCasePlugin"\n             ng-href="#/case-instance/{{ decisionInstance.caseInstanceId }}?searchQuery={{ getActivitySearch(decisionInstance) }}">\n            {{ decisionInstance.caseInstanceId }}\n          </a>\n          <span ng-if="!hasCasePlugin">\n            {{ decisionInstance.caseInstanceId }}\n          </span>\n        </td>\n        <td class="instance-id"\n            ng-if="!decisionInstance.processInstanceId && !decisionInstance.caseInstanceId">\n        </td>\n\n        <td class="activity-id"\n            ng-if="decisionInstance.activityId"\n            cam-widget-clipboard="decisionInstance.activityId">\n          {{ decisionInstance.activityId }}\n        </td>\n        <td class="activity-id"\n            ng-if="!decisionInstance.activityId">\n        </td>\n\n      </tr>\n    </tbody>\n  </table>\n\n  <pagination ng-if="pages.total > pages.size"\n              class="pagination-sm"\n\n              page="pages.current"\n              ng-model="pages.current"\n\n              total-items="pages.total"\n              items-per-page="pages.size"\n\n              max-size="7"\n              boundary-links="true"></pagination>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionDefinition/decision-instance-table.html -->\n',g=JSON.parse('{\n  "types": [\n    {\n      "id": {\n        "key": "decisionInstanceId",\n        "value": "ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ],\n      "default": true\n    },\n    {\n      "id": {\n        "key": "processDefinitionId",\n        "value": "Process Definition ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "processDefinitionKey",\n        "value": "Process Definition Key"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "processInstanceId",\n        "value": "Process Instance ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "caseDefinitionId",\n        "value": "Case Definition ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "caseDefinitionKey",\n        "value": "Case Definition Key"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "caseInstanceId",\n        "value": "Case Instance ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "activityIdIn",\n        "value": "Activity ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "activityInstanceIdIn",\n        "value": "Activity Instance ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    },\n    {\n      "id": {\n        "key": "evaluatedDate",\n        "value": "Evaluated Date"\n      },\n      "operators": [\n        {\n          "key": "Before",\n          "value": "before"\n        },\n        {\n          "key": "After",\n          "value": "after"\n        }\n      ],\n      "allowDates": true,\n      "enforceDates": true\n    },\n    {\n      "id": {\n        "key": "userId",\n        "value": "User ID"\n      },\n      "operators": [\n        {\n          "key": "eq",\n          "value": "="\n        }\n      ]\n    }\n  ],\n  "operators": {\n    "undefined":  [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "like"\n      }\n    ],\n    "string":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      },\n      {\n        "key": "like",\n        "value": "like"\n      }\n    ],\n    "number":     [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      },\n      {\n        "key": "gt",\n        "value": ">"\n      },\n      {\n        "key": "gteq",\n        "value": ">="\n      },\n      {\n        "key": "lt",\n        "value": "<"\n      },\n      {\n        "key": "lteq",\n        "value": "<="\n      }\n    ],\n    "boolean":    [\n      {\n        "key": "eq",\n        "value": "="\n      },\n      {\n        "key": "neq",\n        "value": "!="\n      }\n    ],\n    "object":     [{\n      "key": "eq",\n      "value": "="\n    },\n      {\n        "key": "neq",\n        "value": "!="\n      }],\n    "date":     [{\n      "key": "lteq",\n      "value": "before"\n    },\n      {\n        "key": "gteq",\n        "value": "after"\n      }]\n  },\n  "tooltips": {\n    "inputPlaceholder": "Add criteria",\n    "invalid": "This search query is not valid",\n    "deleteSearch": "Remove search",\n    "type": "Type",\n    "name": "Property",\n    "operator": "Operator",\n    "value": "Value"\n  }\n}\n');b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionDefinition.tab",{id:"decision-instances-table",label:"Decision Instances",template:f,controller:["$scope","$location","search","routeUtil","camAPI","Views","$rootScope",function(a,b,c,f,h,i,j){function k(){var b=q.current,c=q.size,f=(b-1)*c,g=e(a.decisionSearchConfig.searches,["activityIdIn","activityInstanceIdIn"]);a.decisionInstances=null,a.loadingState="LOADING";var h=d.extend({decisionDefinitionId:a.decisionDefinition.id,firstResult:f,maxResults:c,sortBy:"evaluationTime",sortOrder:"desc"},g);o.decisionInstance(h,function(b,c){a.decisionInstances=c,a.loadingState=c.length?"LOADED":"EMPTY";var d=j.$$phase;"$apply"!==d&&"$digest"!==d&&a.$apply()});var i=d.extend({decisionDefinitionId:a.decisionDefinition.id},g);o.decisionInstanceCount(i,function(b,c){q.total=c.count;var d=j.$$phase;"$apply"!==d&&"$digest"!==d&&a.$apply()})}var l=i.getProviders({component:"cockpit.processInstance.view"}),m=l.filter(function(a){
return"history"===a.id}).length>0;a.hasCasePlugin=!1;try{a.hasCasePlugin=!!d.module("cockpit.plugin.case")}catch(n){}a.getProcessDefinitionLink=function(a){return m?"#/process-definition/"+a.processDefinitionId+"/history":"#/process-definition/"+a.processDefinitionId},a.getProcessInstanceLink=function(a){return m?"#/process-instance/"+a.processInstanceId+"/history?activityInstanceIds="+a.activityInstanceId+"&activityIds="+a.activityId:"#/process-instance/"+a.processInstanceId},a.getActivitySearch=function(a){return JSON.stringify([{type:"caseActivityIdIn",operator:"eq",value:a.activityId}])},a.decisionSearchConfig=d.copy(g),a.$on("$routeChanged",function(){q.current=c().page||1}),a.$watch("decisionSearchConfig.searches",function(a,b){a!==b&&k()},!0);var o=h.resource("history"),p={size:50,total:0,current:c().page||1},q=a.pages=d.copy(p);a.$watch("pages.current",function(a,b){a!=b&&(c("page",a&&1!=a?a:null),k())})}],priority:10})}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./../../../../../../common/scripts/util/search-widget-utils":75}],51:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionInstance.table",{id:"highlightRules",initialize:function(a){a.decisionInstance.outputs.forEach(function(b){b.ruleId&&a.tableControl.highlightRow(b.ruleId,"fired")})}})}]},{}],52:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/input-variable-table.html -->\n<!-- <div ng-repeat="variable in variables"\n     cam-widget-variable\n     cam-variable="variable"\n     display="true">\n</div> -->\n\n<div cam-widget-loader loading-state="{{loadingState}}" text-empty="No inputs for this decision instance">\n  <div cam-widget-variables-table\n       cam-editable="[]"\n       cam-variables="variables"></div>\n</div>\n\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/input-variable-table.html -->\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionInstance.tab",{id:"decision-input-table",label:"Inputs",template:d,controller:["$scope",function(a){a.loadingState=a.decisionInstance.inputs.length>0?"LOADED":"EMPTY",a.variables=a.decisionInstance.inputs.map(function(a){return{variable:{type:a.type,value:a.value,name:a.clauseName||a.clauseId,valueInfo:a.valueInfo}}})}],priority:20})}]},{}],53:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/output-variable-table.html -->\n<!-- <div ng-repeat="variable in variables"\n     cam-widget-variable\n     cam-variable="variable"\n     display="true">\n</div> -->\n\n<div cam-widget-variables-table\n     cam-editable="[]"\n     cam-variables="variables"></div>\n\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/decisionList/app/views/decisionInstance/output-variable-table.html -->\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionInstance.tab",{id:"decision-input-table",label:"Outputs",template:d,controller:["$scope",function(a){a.variables=a.decisionInstance.outputs.map(function(a){return{variable:{type:a.type,value:a.value,name:a.clauseName||a.clauseId||a.variableName,valueInfo:a.valueInfo}}})}],priority:10})}]},{}],54:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionInstance.table",{id:"realInput",initialize:function(a){var b=a.tableControl.getViewer().table,c=b.get("elementRegistry"),d=c.filter(function(a){return a.isClauseRow})[0];d&&d.id&&(b.get("eventBus").on("cell.render",function(b){var c=a.decisionInstance.inputs.map(function(a){return a.clauseId}).indexOf(b.data.column.id);if(b.data.row===d&&c!==-1){var e=a.decisionInstance.inputs[c],f=document.createElement("span");"Object"!==e.type&&"Bytes"!==e.type&&"File"!==e.type?(f.className="dmn-input",f.textContent=" = "+e.value):(f.className="dmn-input-object",f.setAttribute("title","Variable value of type "+e.type+" is not shown"),f.textContent=" = ["+e.type+"]"),b.gfx.firstChild.appendChild(f)}}),b.get("graphicsFactory").update("row",d,c.getGraphics(d.id)))}})}]},{}],55:[function(a,b,c){"use strict";b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.decisionInstance.table",{id:"realOutput",initialize:function(a){var b=a.tableControl.getViewer().table;b.get("eventBus").on("cell.render",function(b){var c=b.data.row,d=a.decisionInstance.outputs.map(function(a){return a.ruleId}).indexOf(c.id),e=b.data.column,f=a.decisionInstance.outputs.map(function(a){return a.clauseId}).indexOf(e.id);if(d!==-1&&f!==-1){var g=a.decisionInstance.outputs.filter(function(a){return a.ruleId===c.id&&a.clauseId===e.id})[0],h=document.createElement("span");"Object"!==g.type&&"Bytes"!==g.type&&"File"!==g.type?(h.className="dmn-output",h.textContent=" = "+g.value):(h.className="dmn-output-object",h.setAttribute("title","Variable value of type "+g.type+" is not shown"),h.textContent=" = ["+g.type+"]"),b.gfx.lastChild.appendChild(h)}})}})}]},{}],56:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./dashboard"),f=a("./decisionDefinition/decisionInstanceTable"),g=a("./decisionInstance/inputTable"),h=a("./decisionInstance/outputTable"),i=a("./decisionInstance/highlightRules"),j=a("./decisionInstance/realInput"),k=a("./decisionInstance/realOutput"),l=d.module("cockpit.plugin.decisionList.views",[e.name]);l.config(f),l.config(g),l.config(h),l.config(i),l.config(j),l.config(k),b.exports=l}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./dashboard":47,"./decisionDefinition/decisionInstanceTable":50,"./decisionInstance/highlightRules":51,"./decisionInstance/inputTable":52,"./decisionInstance/outputTable":53,"./decisionInstance/realInput":54,"./decisionInstance/realOutput":55}],57:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openDialog()"\n   tooltip="Change Overriding Job Priority for all Job Definitions"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-cog"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-action.html -->\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.html -->\n<div class="modal-header">\n  <h3>Change Overriding Job Priority</h3>\n</div>\n\n<div class="job-definition-override-job-priority modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'FINISHED\'">\n\n    <p>Change for each job definition associated to this process definition the overriding job priority.</p>\n\n    <form class="form-horizontal"\n          name="overrideJobPriorityForm"\n          novalidate\n          request-aware\n          ng-submit="isValid() && submit()">\n\n      <fieldset>\n\n        <div class="form-group">\n          <label class="col-xs-4 control-label"\n                 for="execute">\n            Execute\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Decide whether to clear the job definition\'s overriding job priority or to set a new priority as job definition\'s overriding job priority."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="false"\n                       type="radio"\n                       name="execute" />\n                Clear Overriding Job Priority\n              </label>\n            </div>\n\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="true"\n                       type="radio"\n                       name="execute" />\n                Set Overriding Job Priority\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="priority">\n            Priority\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="The new priority number for new jobs of the given definition. The new priority overrides any setting specified in the BPMN 2.0 XML."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <input name="priority"\n                   ng-model="data.priority"\n                   class="form-control"\n                   numeric integer="true"\n                   required />\n            <p class="invalid"\n               ng-show="this.overrideJobPriorityForm.priority.$error.numeric">\n              Invalid value: Only an Integer value is allowed.\n            </p>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="includeJobsPriority">\n            Include Existing Jobs\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Including jobs means that all existing jobs of the given definition will receive the priority as well."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8 checkbox">\n            <label>\n              <input name="includeJobsPriority"\n                     type="checkbox"\n                     ng-model="data.includeJobs" />\n            </label>\n          </div>\n        </div>\n\n      </fieldset>\n    </form>\n\n    <p>\n      Do you really want to change the overriding job priority?\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'FINISHED\' || status === \'PERFORMING\'">\n\n    <table class="cam-table">\n      <thead>\n        <tr>\n          <th class="job-id uuid">Activity</th>\n          <th class="scope">Type</th>\n          <th class="status">Status</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr ng-repeat="jobDefinition in showJobDefinitions">\n          <td class="activity">\n            {{ jobDefinition.activityName }}\n          </td>\n          <td class="type">\n            {{ jobDefinition.jobType }}\n          </td>\n          <td class="status">\n            <span ng-show="jobDefinition.status && jobDefinition.status === \'PERFORMING\'">\n              <span class="glyphicon glyphicon-loading"></span>\n            </span>\n            <span ng-show="jobDefinition.status && jobDefinition.status === \'SUCCESS\'">\n              <span class="glyphicon glyphicon-ok"></span>&nbsp;Successful\n            </span>\n            <span ng-show="jobDefinition.status && jobDefinition.status === \'FAILED\'">\n              <span class="glyphicon glyphicon-remove"></span>&nbsp;Failed\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <pagination ng-if="summarizePages.total > summarizePages.size"\n                class="pagination-sm"\n\n                page="summarizePages.current"\n                ng-model="summarizePages.current"\n\n                total-items="summarizePages.total"\n                items-per-page="summarizePages.size"\n\n                max-size="7"\n                boundary-links="true"></pagination>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORMING\'"\n          ng-hide="status === \'FINISHED\'">\n    Close\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="setJobPriority || status === \'FINISHED\'"\n          ng-disabled="!isValid() || status === \'PEFORMING\'">\n    Clear\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="!setJobPriority || status === \'FINISHED\'"\n          ng-disabled="!isValid() || status === \'PERFORMING\'">\n    Override\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'FINISHED\'">\n    OK\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/bulk-override-job-priority/bulk-override-job-priority-dialog.html -->\n',f=function(a){a.registerDefaultView("cockpit.processDefinition.runtime.action",{id:"bulk-job-definition-override-job-priority-action",template:d,controller:["$scope","$rootScope","$modal",function(a,b,d){var f,g=a.processData.newChild(a);g.observe("jobDefinitions",function(a){f=a}),a.openDialog=function(){var b=d.open({resolve:{jobDefinitions:function(){return f}},controller:"BulkJobDefinitionOverrideJobPriorityController",template:e});b.result.then(function(b){"FINISHED"===b.status&&(g.changed("jobDefinitions"),g.set("filter",c.extend({},a.filter)))})}}],priority:10})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],58:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$q","Notifications","JobDefinitionResource","$modalInstance","jobDefinitions",function(a,b,d,e,f,g){function h(b){for(var c=p.size,d=(b-1)*c,e=a.showJobDefinitions=[],f=0;f<c;f++){var h=g[f+d];h&&e.push(h)}}function i(b){a.status=l,j(b).then(function(){o?a.setJobPriority?d.addError({status:"Finished",message:"Overriding the priority was not successfully.",exclusive:!0}):d.addError({status:"Finished",message:"Clearing the priority was not successfully.",exclusive:!0}):a.setJobPriority?d.addMessage({status:"Finished",message:"Overriding the priority completed successfully.",exclusive:!0}):d.addMessage({status:"Finished",message:"Clearing the priority completed successfully.",exclusive:!0}),a.status=k})}function j(a){function c(a){a.status=l,e.setJobPriority({id:a.id},q,function(){a.status=m,g-=1,0===g&&f.resolve()},function(b){o=!0,a.status=n,a.error=b,g-=1,0===g&&f.resolve()})}for(var d,f=b.defer(),g=a.length,h=0;d=a[h];h++)c(d);return f.promise}a.status;var k="FINISHED",l="PERFORMING",m="SUCCESS",n="FAILED",o=!1,p=a.summarizePages={size:5,total:g.length,current:1},q=a.data={priority:null,includeJobs:!1};a.setJobPriority=!0,a.$on("$routeChangeStart",function(){var b={};b.status=a.status,f.close(b)}),a.$watch("summarizePages.current",function(a){a&&h(a)}),a.submit=function(){var b=a.setJobPriority;b||(q={}),i(g)},a.isValid=function(){var b=c.element('[name="overrideJobPriorityForm"]').scope();return!a.setJobPriority||!(!b||!b.overrideJobPriorityForm)&&b.overrideJobPriorityForm.$valid},a.close=function(a){var b={};b.status=a,f.close(b)}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],59:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./override-job-priority/override-job-priority-action"),f=a("./override-job-priority/override-job-priority-dialog"),g=a("./bulk-override-job-priority/bulk-override-job-priority-action"),h=a("./bulk-override-job-priority/bulk-override-job-priority-dialog"),i=d.module("cockpit.plugin.jobDefinition.actions",[]);i.config(e),i.controller("JobDefinitionOverrideJobPriorityController",f),i.config(g),i.controller("BulkJobDefinitionOverrideJobPriorityController",h),b.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./bulk-override-job-priority/bulk-override-job-priority-action":57,"./bulk-override-job-priority/bulk-override-job-priority-dialog":58,"./override-job-priority/override-job-priority-action":60,"./override-job-priority/override-job-priority-dialog":61}],60:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openDialog(jobDefinition)"\n   tooltip="Change Overriding Job Priority"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-cog"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-action.html -->\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.html -->\n<div class="modal-header">\n  <h3>Change Overriding Job Priority</h3>\n</div>\n\n<div class="job-definition-override-job-priority modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n\n    <p>Change the overriding priority for jobs of the given job definition.</p>\n\n    <form class="form-horizontal"\n          name="overrideJobPriorityForm"\n          novalidate\n          request-aware\n          ng-submit="isValid() && submit()">\n\n      <fieldset>\n\n        <div class="form-group" ng-show="hasOverridingJobPriority()">\n          <label class="col-xs-4 control-label"\n                 for="execute">\n            Execute\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Decide whether to clear the job definition\'s overriding job priority or to set a new priority as job definition\'s overriding job priority."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="false"\n                       type="radio"\n                       name="execute" />\n                Clear Overriding Job Priority\n              </label>\n            </div>\n\n            <div class="radio">\n              <label>\n                <input ng-model="setJobPriority"\n                       ng-value="true"\n                       type="radio"\n                       name="execute" />\n                Set Overriding Job Priority\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="priority">\n            Priority\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="The new priority number for new jobs of the given definition. The new priority overrides any setting specified in the BPMN 2.0 XML."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <input name="priority"\n                   ng-model="data.priority"\n                   class="form-control"\n                   numeric integer="true"\n                   required />\n            <p class="invalid"\n               ng-show="this.overrideJobPriorityForm.priority.$error.numeric">\n              Invalid value: Only an Integer value is allowed.\n            </p>\n          </div>\n        </div>\n\n        <div class="form-group" ng-show="setJobPriority">\n          <label class="col-xs-4 control-label"\n                 for="includeJobsPriority">\n            Include Existing Jobs\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Including jobs means that all existing jobs of the given definition will receive the priority as well."\n                  tooltip-placement="right">\n            </span>\n          </label>\n\n          <div class="col-xs-8 checkbox">\n            <label>\n              <input name="includeJobsPriority"\n                     type="checkbox"\n                     ng-model="data.includeJobs" />\n            </label>\n          </div>\n        </div>\n\n      </fieldset>\n    </form>\n\n    <p>\n      Do you really want to change the overriding job priority?\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'SUCCESS\'">\n    <p ng-show="setJobPriority">\n      The overriding job priority has been updated to {{ data.priority }} successfully.\n    </p>\n    <p ng-hide="setJobPriority">\n      The overriding job priority has been cleared successfully.\n    </p>\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    <p ng-show="setJobPriority">\n      The overriding job priority could not be updated to {{ data.priority }} successfully.\n    </p>\n    <p ng-hide="setJobPriority">\n      The overriding job priority could not be cleared successfully.\n    </p>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORM_UDPATE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n    Close\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="setJobPriority || status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    Clear\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="submit()"\n          ng-hide="!setJobPriority || status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    Override\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">\n    OK\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/actions/override-job-priority/override-job-priority-dialog.html -->\n',f=function(a){a.registerDefaultView("cockpit.jobDefinition.action",{id:"job-definition-override-job-priority-action",template:d,controller:["$scope","$rootScope","$modal",function(a,b,d){a.openDialog=function(b){var f=d.open({resolve:{jobDefinition:function(){return b}},controller:"JobDefinitionOverrideJobPriorityController",template:e});f.result.then(function(b){"SUCCESS"===b.status&&(a.processData.changed("jobDefinitions"),a.processData.set("filter",c.extend({},a.filter)))})}}],priority:10})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],61:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$q","Notifications","JobDefinitionResource","$modalInstance","jobDefinition",function(a,b,d,e,f,g){var h="SUCCESS",i="FAIL";a.status,a.setJobPriority=!0;var j=a.data={priority:g.overridingJobPriority,includeJobs:!1};a.$on("$routeChangeStart",function(){var b={};b.status=a.status,f.close(b)}),a.hasOverridingJobPriority=function(){return null!==g.overridingJobPriority&&void 0!==g.overridingJobPriority},a.submit=function(){var b=a.setJobPriority;b||(j={}),e.setJobPriority({id:g.id},j,function(){a.status=h,b?d.addMessage({status:"Finished",message:"Overriding the priority completed successfully.",exclusive:!0}):d.addMessage({status:"Finished",message:"Clearing the priority completed successfully.",exclusive:!0})},function(c){a.status=i,b?d.addError({status:"Finished",message:"Overriding the priority was not successful: "+c.data.message,exclusive:!0}):d.addError({status:"Finished",message:"Clearing the priority was not successful: "+c.data.message,exclusive:!0})})},a.isValid=function(){var b=c.element('[name="overrideJobPriorityForm"]').scope();return!a.setJobPriority||!(!b||!b.overrideJobPriorityForm)&&b.overrideJobPriorityForm.$valid},a.close=function(a){var b={};b.status=a,f.close(b)}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],62:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./processDefinition/jobDefinitionData"),f=d.module("cockpit.plugin.jobDefinition.data",[]);f.config(e),b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./processDefinition/jobDefinitionData":63}],63:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d=["$scope","processData","JobDefinitionResource",function(a,b,d){a.$on("$processDefinition.suspensionState.changed",function(){b.changed("jobDefinitions")}),b.provide("jobDefinitions",["processDefinition",function(a){return d.query({processDefinitionId:a.id}).$promise}]),b.observe(["jobDefinitions","bpmnElements"],function(a,b){c.forEach(a,function(a){var c=a.activityId,d=b[c];a.activityName=d&&(d.name||d.id)||c})})}],e=function(a){a.registerData("cockpit.processDefinition.data",{id:"job-definitions-data",controller:d})};e.$inject=["DataProvider"],b.exports=e}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],64:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./views/main"),f=a("./data/main"),g=a("./actions/main");b.exports=d.module("cockpit.plugin.jobDefinition",[e.name,f.name,g.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./actions/main":59,"./data/main":62,"./views/main":65}],65:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./processDefinition/jobDefinitionTable"),f=a("./processDefinition/jobDefinitionSuspensionState"),g=a("./processDefinition/jobDefinitionSuspensionOverlay"),h=a("./processDefinition/suspensionStateAction"),i=d.module("cockpit.plugin.jobDefinition.views",[]);i.config(e),i.controller("JobDefinitionSuspensionStateController",f),i.config(g),i.config(h),b.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./processDefinition/jobDefinitionSuspensionOverlay":66,"./processDefinition/jobDefinitionSuspensionState":67,"./processDefinition/jobDefinitionTable":68,"./processDefinition/suspensionStateAction":69}],66:[function(a,b,c){"use strict";var d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-overlay.html -->\n<span class="badge badge-warning activity-top-right-position"\n      tooltip="Suspended Job Definition"\n      tooltip-placement="top"\n      ng-show="isSuspended()">\n  <span class="glyphicon glyphicon-pause"></span>\n</span>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-overlay.html -->\n',e=["$scope",function(a){var b=a.bpmnElement,c=a.processData.newChild(a);c.provide("jobDefinitionsForElement",["jobDefinitions",function(a){for(var c=[],d=0;d<a.length;d++){var e=a[d];e.activityId===b.id&&c.push(e)}return c}]),a.jobDefinitionsForElement=c.observe("jobDefinitionsForElement",function(c){c.length>0&&(b.isSelectable=!0),a.jobDefinitionsForElement=c}),a.isSuspended=function(){return a.jobDefinitionsForElement.filter&&a.jobDefinitionsForElement.filter(function(a){return a.suspended}).length>0}}],f=function(a){a.registerDefaultView("cockpit.processDefinition.diagram.overlay",{id:"job-definition-diagram-overlay",template:d,controller:e,priority:10})};f.$inject=["ViewsProvider"],b.exports=f},{}],67:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$http","$filter","Uri","Notifications","$modalInstance","jobDefinition",function(a,b,d,e,f,g,h){var i="BEFORE_UPDATE",j="PERFORM_UDPATE",k="SUCCESS",l="FAIL",m=d("date"),n="yyyy-MM-dd'T'HH:mm:ss";a.jobDefinition=h,a.status=i,a.data={includeJobs:!0,executeImmediately:!0,executionDate:m(Date.now(),n)},a.$on("$routeChangeStart",function(){g.close(a.status)}),a.updateSuspensionState=function(){a.status=j;var c={};c.suspended=!h.suspended,c.includeJobs=a.data.includeJobs,c.executionDate=a.data.executeImmediately?null:a.data.executionDate,b.put(e.appUri("engine://engine/:engine/job-definition/"+h.id+"/suspended/"),c).success(function(){a.status=k,a.data.executeImmediately?f.addMessage({status:"Finished",message:"Updated the suspension state of the job definition.",exclusive:!0}):f.addMessage({status:"Finished",message:"The update of the suspension state of the job definition has been scheduled.",exclusive:!0})}).error(function(b){a.status=l,a.data.executeImmediately?f.addError({status:"Finished",message:"Could not update the suspension state of the job definition: "+b.message,exclusive:!0}):f.addError({status:"Finished",message:"The update of the suspension state of the job definition could not be scheduled: "+b.message,exclusive:!0})})},a.isValid=function(){var a=c.element('[name="updateSuspensionStateForm"]').scope();return!(!a||!a.updateSuspensionStateForm)&&a.updateSuspensionStateForm.$valid},a.close=function(b){var c={};c.status=b,c.suspended=!h.suspended,c.executeImmediately=a.data.executeImmediately,c.executionDate=a.data.executionDate,g.close(c)}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],68:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("../../../../../../common/scripts/util/search-widget-utils"),f='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-table.html -->\n<table class="job-definition cam-table">\n  <thead>\n    <tr>\n      <th class="state">State</th>\n      <th class="activity">Activity</th>\n      <th class="type">Type</th>\n      <th class="configuration">Configuration</th>\n      <th class="overriding-job-priority">Overriding Job Priority</th>\n      <th class="action">Action</th>\n    </tr>\n  </thead>\n\n  <tbody>\n    <tr ng-repeat="jobDefinition in jobDefinitions">\n      <td class="state">\n        <span ng-show="jobDefinition.suspended">\n          Suspended\n        </span>\n        <span ng-hide="jobDefinition.suspended">\n          Active\n        </span>\n      </td>\n      <td class="activity"\n          cam-widget-clipboard="jobDefinition.activityId">\n        <a ng-href="#/process-definition/{{ processDefinition.id }}/runtime?{{ getSearchQueryForSearchType(jobDefinition.activityId) }}&amp;detailsTab=job-definition-table">\n          {{ jobDefinition.activityName }}\n        </a>\n      </td>\n      <td class="type"\n          cam-widget-clipboard="jobDefinition.jobType">\n        {{ jobDefinition.jobType }}\n      </td>\n      <td class="configuration">\n        {{ jobDefinition.jobConfiguration }}\n      </td>\n      <td class="overriding-job-priority">\n        {{ jobDefinition.overridingJobPriority }}\n      </td>\n      <td class="action">\n        <span ng-repeat="actionProvider in jobDefinitionActions">\n          <view provider="actionProvider" vars="jobDefinitionVars"/>\n        </span>\n      </td>\n    </tr>\n\n    <tr ng-if="!jobDefinitions">\n      <td colspan="6">\n        <span class="glyphicon glyphicon-loading"></span>\n        loading job definitions...\n      </td>\n    </tr>\n\n    <tr ng-if="jobDefinitions && !jobDefinitions.length">\n      <td colspan="6">\n        No job definitions matched by current filter.\n      </td>\n    </tr>\n\n  </tbody>\n</table>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-table.html -->\n',g=["$scope","Views",function(a,b){
function c(b,c){a.jobDefinitions=null;var e=b.activityIds;if(!e||!e.length)return void(a.jobDefinitions=c);var f=[];d.forEach(c,function(a){var b=a.activityId;e.indexOf(b)!=-1&&f.push(a)}),a.jobDefinitions=f}var f=a.processData.newChild(a);f.observe(["filter","jobDefinitions","bpmnElements"],function(a,b){c(a,b)}),a.jobDefinitionVars={read:["jobDefinition","processData","filter"]},a.jobDefinitionActions=b.getProviders({component:"cockpit.jobDefinition.action"}),a.getSearchQueryForSearchType=e.getSearchQueryForSearchType.bind(null,"activityIdIn")}],h=function(a){a.registerDefaultView("cockpit.processDefinition.runtime.tab",{id:"job-definition-table",label:"Job Definitions",template:f,controller:g,priority:2})};h.$inject=["ViewsProvider"],b.exports=h}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../../../../../../common/scripts/util/search-widget-utils":75}],69:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null,d='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/suspension-state-action.html -->\n<a class="btn btn-default action-button"\n   ng-click="openSuspensionStateDialog(jobDefinition)"\n   ng-show="jobDefinition.suspended"\n   tooltip="Activate Job Definition"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-play"></span>\n</a>\n<a class="btn btn-default action-button"\n   ng-click="openSuspensionStateDialog(jobDefinition)"\n   ng-hide="jobDefinition.suspended"\n   tooltip="Suspend Job Definition"\n   tooltip-placement="left">\n  <span class="glyphicon glyphicon-pause"></span>\n</a>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/suspension-state-action.html -->\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-state-dialog.html -->\n<div class="modal-header">\n  <h3>{{ (jobDefinition.suspended ? \'Activate\' : \'Suspend\') }} Job Definition</h3>\n</div>\n\n<div class="job-definition-suspension-state modal-body">\n  <div notifications-panel></div>\n\n  <div ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n\n    <p ng-show="jobDefinition.suspended">\n      <!-- activation -->\n      This job definition will be activated, so that new jobs based on this job definition are initially active.\n    </p>\n\n    <p ng-hide="jobDefinition.suspended">\n      <!-- suspension -->\n      This job definition will be suspended, so that new jobs based on this job definition are initially suspended.\n    </p>\n\n    <form class="form-horizontal"\n          name="updateSuspensionStateForm"\n          novalidate\n          request-aware\n          ng-submit="updateSuspensionState()">\n\n      <fieldset>\n        <div class="form-group">\n          <label class="col-xs-4 control-label"\n                 for="includeJobsValue">\n            Include Existing Jobs\n            <!-- activation -->\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Including jobs means that all existing jobs of this job definition will be activated too, if the value is set to true."\n                  tooltip-placement="right"\n                  ng-show="jobDefinition.suspended">\n            </span>\n\n            <!-- suspension -->\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Including jobs means that all existing jobs of this job definition will be suspended too, if the value is set to true."\n                  tooltip-placement="right"\n                  ng-hide="jobDefinition.suspended">\n            </span>\n          </label>\n\n\n          <div class="col-xs-8 checkbox">\n            <label>\n              <input id="includeJobsValueId"\n                     name="includeJobsValue"\n                     type="checkbox"\n                     ng-model="data.includeJobs" />\n            </label>\n          </div>\n        </div>\n\n        <div class="form-group">\n          <label class="col-xs-4 control-label"\n                 for="executeImmediately">\n            Execute\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Decide whether the activation of this job definition should be executed immediately or delayed. If the activation should happen delayed then an execution date must be provided on which the activation will be scheduled."\n                  tooltip-placement="right"\n                  ng-show="jobDefinition.suspended">\n            </span>\n\n            <span class="glyphicon glyphicon-question-sign"\n                  tooltip="Decide whether the suspension of this job definition should be executed immediately or delayed. If the suspension should happen delayed then an execution date must be provided on which the suspension will be scheduled."\n                  tooltip-placement="right"\n                  ng-hide="jobDefinition.suspended">\n            </span>\n          </label>\n\n          <div class="col-xs-8">\n            <div class="radio">\n              <label>\n                <input ng-model="data.executeImmediately"\n                       ng-value="true"\n                       type="radio"\n                       name="execute" />\n                Immediately\n              </label>\n            </div>\n\n            <div class="radio">\n              <label>\n                <input ng-model="data.executeImmediately"\n                       ng-value="false"\n                       type="radio"\n                       name="execute" />\n                Delayed\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class="form-group"\n             ng-show="!data.executeImmediately">\n          <label class="col-xs-4 control-label"\n                 for="executionDateValue">\n            Schedule at\n          </label>\n\n          <div class="col-xs-8">\n            <input name="executionDateValue"\n                   ng-model="data.executionDate"\n                   class="form-control"\n                   type="text"\n                   date\n                   required />\n\n            <p class="invalid"\n               ng-show="this.updateSuspensionStateForm.executionDateValue.$error.date">\n              Supported pattern \'yyyy-MM-ddTHH:mm:ss\'.\n            </p>\n          </div>\n        </div>\n\n      </fieldset>\n    </form>\n\n    <p>\n      Do you really want to {{ (jobDefinition.suspended ? \'activate\' : \'suspend\') }} this job definition?\n    </p>\n\n  </div>\n\n  <div ng-show="status === \'SUCCESS\'">\n    <p ng-show="jobDefinition.suspended && data.executeImmediately">\n      The suspension state of the Job Definition has been updated to "active" successfully.\n    </p>\n    <p ng-show="jobDefinition.suspended && !data.executeImmediately">\n      The activation of the Job Definition has been scheduled to {{ data.executionDate }} successfully.\n    </p>\n    <p ng-show="!jobDefinition.suspended && data.executeImmediately">\n      The suspension state of the Job Definition has been updated to "suspended" successfully.\n    </p>\n    <p ng-show="!jobDefinition.suspended && !data.executeImmediately">\n      The suspension of the Job Definition has been scheduled to {{ data.executionDate }} successfully.\n    </p>\n  </div>\n\n  <div ng-show="status === \'FAIL\'">\n    <p ng-show="jobDefinition.suspended && data.executeImmediately">\n      The suspension state of the Job Definition could not be updated to "active" successfully.\n    </p>\n    <p ng-show="jobDefinition.suspended && !data.executeImmediately">\n      The activation of the Job Definition could not be scheduled to {{ data.executionDate }} successfully.\n    </p>\n    <p ng-show="!jobDefinition.suspended && data.executeImmediately">\n      The suspension state of the Job Definition could not be updated to "suspended" successfully.\n    </p>\n    <p ng-show="!jobDefinition.suspended && !data.executeImmediately">\n      The suspension of the Job Definition could not be scheduled to {{ data.executionDate }} successfully.\n    </p>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-link"\n          ng-click="close(status)"\n          ng-disabled="status === \'PERFORM_UDPATE\'"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'">\n    Close\n  </button>\n\n  <button type="submit"\n          class="btn btn-primary"\n          ng-click="updateSuspensionState()"\n          ng-hide="status === \'SUCCESS\' || status === \'FAIL\'"\n          ng-disabled="!isValid() || status === \'PERFORM_UDPATE\'">\n    {{ (jobDefinition.suspended ? \'Activate\' : \'Suspend\') }}\n  </button>\n\n  <button class="btn btn-primary"\n          ng-click="close(status)"\n          ng-show="status === \'SUCCESS\' || status === \'FAIL\'">\n    OK\n  </button>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/jobDefinition/app/views/processDefinition/job-definition-suspension-state-dialog.html -->\n',f=function(a){a.registerDefaultView("cockpit.jobDefinition.action",{id:"update-suspension-state",template:d,controller:["$scope","$rootScope","search","$modal",function(a,b,d,f){a.openSuspensionStateDialog=function(d){var g=f.open({resolve:{jobDefinition:function(){return d}},controller:"JobDefinitionSuspensionStateController",template:e});g.result.then(function(e){"SUCCESS"===e.status&&(e.executeImmediately&&(d.suspended=e.suspended,b.$broadcast("$jobDefinition.suspensionState.changed",a.jobDefinition)),a.processData.set("filter",c.extend({},a.filter)))})}}],priority:50})};f.$inject=["ViewsProvider"],b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],70:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./views/main");b.exports=d.module("cockpit.plugin.tasks",[e.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./views/main":72}],71:[function(a,b,c){"use strict";var d='<!-- # CE - ui/cockpit/plugins/tasks/app/views/dashboard/task-dashboard.html -->\n<div class="dashboard-row">\n  <section class="col-xs-12 col-md-6">\n    <div class="inner">\n      <header>\n        <h1 class="section-title">Assignments by type</h1>\n      </header>\n      <table class="cam-table values-left" id="open-task-statistics">\n        <thead>\n          <tr>\n            <th>Tasks</th>\n            <th>Type</th>\n          </tr>\n        </thead>\n\n        <tfoot>\n          <tr>\n            <th>\n              <span ng-if="!openTasksState.$loaded" class="glyphicon glyphicon-refresh animate-spin"></span>\n              <span ng-if="openTasksState.$loaded && !hasSearchPlugin">{{ openTasksCount }}</span>\n              <span ng-if="openTasksState.$loaded && hasSearchPlugin">\n                <a class="search-link" ng-click="createSearch(\'allOpenTasks\', \'statistics\')">{{ openTasksCount }}</a>\n              </span>\n            </th>\n            <th>Total</th>\n          </tr>\n        </tfoot>\n\n        <tbody>\n          <tr ng-repeat="taskStatistic in taskStatistics">\n            <th>\n              <span ng-if="!taskStatistic.state.$loaded" class="glyphicon glyphicon-refresh animate-spin"></span>\n              <span ng-if="taskStatistic.state.$loaded && !hasSearchPlugin">{{ taskStatistic.count }}</span>\n              <span ng-if="taskStatistic.state.$loaded && hasSearchPlugin">\n                <a class="search-link" ng-click="createSearch(taskStatistic.search, \'statistics\')"> {{ taskStatistic.count }}</a>\n              </span>\n            </th>\n            <td>{{ taskStatistic.label }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </section>\n\n  <section class="col-xs-12 col-md-6">\n    <div class="inner">\n      <header>\n        <h1 class="section-title">Assignments by group</h1>\n      </header>\n      <table class="cam-table values-left" id="task-group-counts">\n        <thead>\n          <tr>\n            <th>Tasks</th>\n            <th>Group</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr ng-if="!taskGroupState.$loaded">\n            <td colspan="2"><span class="glyphicon glyphicon-refresh animate-spin"></span></td>\n          </tr>\n          <tr ng-if="taskGroupState.$loaded" ng-repeat="taskGroup in taskGroups">\n            <td ng-if="!hasSearchPlugin">{{ taskGroup.taskCount }}</td>\n            <td ng-if="hasSearchPlugin">\n              <a class="search-link" ng-click="createSearch(taskGroup.groupName, \'group\')">{{ taskGroup.taskCount }}</a>\n            </td>\n            <td>{{ formatGroupName(taskGroup.groupName) }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <p id="multiple-groups-info" ng-if="taskGroupState.$loaded">\n        <span class="glyphicon glyphicon-info-sign"></span>\n        A task may have multiple groups.\n      </p>\n    </div>\n  </section>\n</div>\n<!-- / CE - ui/cockpit/plugins/tasks/app/views/dashboard/task-dashboard.html -->\n';b.exports=["ViewsProvider",function(a){a.registerDefaultView("cockpit.tasks.dashboard",{id:"task-dashboard",label:"Task Dashboard",template:d,controller:["$scope","$q","Views","camAPI","dataDepend","search","Notifications",function(a,b,c,d,e,f,g){var h=e.create(a),i=d.resource("history"),j=d.resource("task-report");a.taskStatistics=[{state:void 0,label:"assigned to a user",count:0,search:"openAssignedTasks"},{state:void 0,label:"assigned to 1 or more groups",count:0,search:"openGroupTasks"},{state:void 0,label:"unassigned",count:0,search:"openUnassignedTasks"}];var k=function(a,c,d,e){var f=b.defer(),h=function(b,c){b?(g.addError({status:"Could not fetch the resource for '"+a+"'",message:b.toString()}),f.reject(b)):f.resolve(c)};return void 0==e||null==e?c[d](h):c[d](e,h),f.promise},l=function(){return{unfinished:!0}};h.provide("openTaskCount",function(){return k("Open tasks",i,"taskCount",l())}),h.provide("assignedToUserCount",function(){var a=l();return a.assigned=!0,k("Tasks assigned to users",i,"taskCount",a)}),h.provide("assignedToGroupCount",function(){var a=l();return a.unassigned=!0,a.withCandidateGroups=!0,k("Tasks assigned to groups",i,"taskCount",a)}),h.provide("notAssignedCount",function(){var a=l();return a.unassigned=!0,a.withoutCandidateGroups=!0,k("Unassigned tasks",i,"taskCount",a)}),h.provide("countByCandidateGroup",function(){return k("Tasks per group",j,"countByCandidateGroup")}),a.openTasksState=h.observe(["openTaskCount"],function(b){a.openTasksCount=b.count||0}),a.taskStatistics[0].state=h.observe(["assignedToUserCount"],function(b){a.taskStatistics[0].count=b.count||0}),a.taskStatistics[1].state=h.observe(["assignedToGroupCount"],function(b){a.taskStatistics[1].count=b.count||0}),a.taskStatistics[2].state=h.observe(["notAssignedCount"],function(b){a.taskStatistics[2].count=b.count||0}),a.taskGroupState=h.observe(["countByCandidateGroup"],function(b){a.taskGroups=b}),a.formatGroupName=function(a){return null==a?"without group":a};var m=c.getProviders({component:"cockpit.tasks.dashboard"}),n=a.hasSearchPlugin=m.filter(function(a){return"search-tasks"===a.id}).length>0;if(n){var o=function(a,b,c){return arguments.length<3&&(b="eq",c=""),{type:a,operator:b,value:c,name:""}},p=function(){return[o("unfinished")]},q=p();a.createSearch=function(a,b){if("statistics"===b)switch(a){case"openAssignedTasks":q.push(o("assigned"));break;case"openGroupTasks":q.push(o("withCandidateGroups")),q.push(o("unassigned"));break;case"openUnassignedTasks":q.push(o("withoutCandidateGroups")),q.push(o("unassigned"))}else null!=a?q.push(o("taskHadCandidateGroup","eq",a)):(q.push(o("withoutCandidateGroups")),q.push(o("unassigned")));f.updateSilently({searchQuery:JSON.stringify(q)},!0),q=p()},f().hasOwnProperty("searchQuery")||f.updateSilently({searchQuery:JSON.stringify(q)},!0)}}],priority:0})}]},{}],72:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./dashboard/task-dashboard"),f=d.module("cockpit.plugin.tasks.views",[]);f.config(e),b.exports=f}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./dashboard/task-dashboard":71}],73:[function(a,b,c){"use strict";function d(a,b){return a.indexOf(b)!==-1}b.exports=d},{}],74:[function(a,b,c){"use strict";function d(a,b,c){var d=a.pages=f.copy(g);return d.current=e(b),a.$watch("pages.current",function(a,d){a!=d&&(b("page",a&&1!=a?a:null),c(a,d))}),d}function e(a){return a().page||1}var f=a("camunda-commons-ui/vendor/angular"),g={size:50,total:0,current:1};b.exports={initializePaginationInController:d}},{"camunda-commons-ui/vendor/angular":2}],75:[function(a,b,c){"use strict";function d(a,b){b=[].concat(b);var c=JSON.stringify(q(a,b));return e("searchQuery="+c)}function e(a){return encodeURI(a).replace(/#/g,"%23")}function f(a,b,c){return c=C.isArray(c)?c:[],!C.equals(g(a,c),g(b,c))}function g(a,b){return C.isObject(a)?i(h(a,b)):a}function h(a,b){return Object.keys(a).reduce(function(c,d){var e=a[d];return D(b,d)&&(c[d]=e),c},{})}function i(a){return Object.keys(a).reduce(function(b,c){var d=a[c];return null!=d&&(b[c]=d),b},{})}function j(a,b){var c=JSON.parse(b.searchQuery||"[]");return k(a,c)}function k(a,b){return b.filter(function(b){return b.type===a}).map(function(a){return a.value})}function l(a,b,c){var d=m(a,c,b),e=n(c,a,b);return d.concat(q(b,e))}function m(a,b,c){return a.filter(function(a){return a.type!==c||!D(b,a.value)})}function n(a,b,c){var d=b.filter(function(a){return a.type===c}).map(function(a){return a.value});return a.filter(function(a){return!D(d,a)})}function o(a,b,c){return p(b,a).concat(q(b,c))}function p(a,b){return b.filter(function(b){return b.type!==a})}function q(a,b){return b.map(r.bind(null,a))}function r(a,b){return{type:a,operator:"eq",value:b}}function s(a,b,c){return a=C.isArray(a)?a:[],b=C.isArray(b)?b:[],c=C.isArray(c)?c:["variables"],b=b.concat(c),a.reduce(t.bind(null,b,c),{})}function t(a,b,c,d){var e=u(d,b),f=x(d,e,b);return D(b,e)&&(f=A(d,f)),D(a,e)?c[e]=B(c,e,f):c[e]=f,c}function u(a,b){var c=a.type.value.key,d=a.operator.value.key;return v(c)&&(c=c.slice(0,-4)),w(d)&&!D(b,c)&&(c+=d),c}function v(a){return a.indexOf("Date")!==-1}function w(a){return D(["After","Before","Like"],a)}function x(a){return!!a.basic||y(z(a.value.value),a.operator.value.key)}function y(a,b){return D(["like","Like"],b)?"%"+a+"%":a}function z(a){return isNaN(a)||""===a.trim()?"true"===a||"false"!==a&&("NULL"===a?null:0===a.indexOf("'")&&a.lastIndexOf("'")===a.length-1?a.substr(1,a.length-2):a):+a}function A(a,b){return{name:a.name.value,operator:a.operator.value.key,value:b}}function B(a,b,c){return C.isArray(a[b])?a[b].concat([c]):[c]}var C=a("camunda-commons-ui/vendor/angular"),D=a("./includes");b.exports={getSearchQueryForSearchType:d,getActivityIdsFromUrlParams:j,replaceActivitiesInSearchQuery:o,createSearchQueryForSearchWidget:s,shouldUpdateFilter:f,createSearchesForActivityIds:q,encodeQuery:e,updateSearchValuesForTypeInCtrlMode:l}},{"./includes":73,"camunda-commons-ui/vendor/angular":2}]},{},[42])(42)});