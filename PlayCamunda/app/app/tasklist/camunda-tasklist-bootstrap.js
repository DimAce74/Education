var $=window.jQuery=window.$=require("jquery");window.__define("camunda-tasklist-bootstrap",["./scripts/camunda-tasklist-ui"],function(){"use strict";function a(){for(var a=$("base"),b={},c=["href","app-root","admin-api","tasklist-api","engine-api"],d=0;d<c.length;d++)b[c[d]]=a.attr(c[d]);return b}var b=window.CamundaTasklistUi;requirejs.config({baseUrl:"../../../lib"});var c=window;b.exposePackages(c),window.define=window.__define,window.require=window.__require,requirejs(["globalize"],function(a){a(requirejs,["angular","camunda-commons-ui","camunda-bpm-sdk-js","jquery","angular-data-depend"],c);var d=window.PLUGIN_PACKAGES||[],e=window.PLUGIN_DEPENDENCIES||[];d.forEach(function(a){var b=document.createElement("link");b.setAttribute("rel","stylesheet"),b.setAttribute("href",a.location+"/plugin.css"),document.head.appendChild(b)}),requirejs.config({packages:d,baseUrl:"../",paths:{ngDefine:"../../lib/ngDefine"}});var f=["angular","ngDefine"].concat(e.map(function(a){return a.requirePackageName}));requirejs(f,function(a){if("undefined"!=typeof window.camTasklistConf&&window.camTasklistConf.customScripts){var c=window.camTasklistConf.customScripts||{},d={};["baseUrl","paths","bundles","shim","map","config","packages","waitSeconds","context","callback","enforceDefine","xhtml","urlArgs","scriptType"].forEach(function(a){c[a]&&(d[a]=c[a])}),requirejs.config(d),requirejs(c.deps||[],function(){a.module("cam.tasklist.custom",c.ngDeps),window.define=void 0,window.require=void 0,b(e)})}else a.module("cam.tasklist.custom",[]),require([],function(){window.define=void 0,window.require=void 0,b(e)})})});var d=a();if("undefined"!=typeof window.tasklistConf&&window.tasklistConf.polyfills){var e=window.tasklistConf.polyfills;if(e.indexOf("placeholder")>-1){var f=window.requirejs,g=d["app-root"];f([g+"/app/tasklist/scripts/placeholders.utils.js",g+"/app/tasklist/scripts/placeholders.main.js"],function(){f([g+"/app/tasklist/scripts/placeholders.jquery.js"],function(){})})}}}),requirejs(["camunda-tasklist-bootstrap"],function(){});